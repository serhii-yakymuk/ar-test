{"version":3,"sources":["components/AR/armarkercontrols.js","components/AR/artoolkitcontext.js","components/SoundWave/SoundWave.js","components/SoundIcon/SoundIcon.js","hooks/useWindowSize.js","hooks/useSourceStyles.js","components/WebcamSource/WebcamSource.js","components/AR/AR.js","components/App/App.js","serviceWorker.js","index.js"],"names":["artoolkit","window","currentId","ArMarkerControls","context","object3d","parameters","this","id","matrixAutoUpdate","visible","size","type","patternUrl","barcodeValue","changeMatrixMode","minConfidence","addMarker","_initArtoolkit","Object","assign","prototype","EventDispatcher","dispose","removeMarker","updateWithModelViewMatrix","modelViewMatrix","markerObject3D","tmpMatrix","Matrix4","copy","_artoolkitProjectionAxisTransformMatrix","markerAxisTransformMatrix","makeRotationX","Math","PI","multiply","matrix","getInverse","decompose","position","quaternion","scale","dispatchEvent","data","toArray","name","replace","arController","artoolkitMarkerId","loadMarker","markerId","trackPatternMarkerId","trackBarcodeMarkerId","addEventListener","event","eventType","marker","PATTERN_MARKER","idPatt","cfPatt","BARCODE_MARKER","idMatrix","cfMatt","fromArray","ARController","ARCameraParam","DETECTION_MODES","AR_TEMPLATE_MATCHING_COLOR","AR_TEMPLATE_MATCHING_COLOR_AND_MATRIX","AR_TEMPLATE_MATCHING_MONO","AR_TEMPLATE_MATCHING_MONO_AND_MATRIX","MATRIX_CODE_TYPES","AR_MATRIX_CODE_3x3","AR_MATRIX_CODE_3x3_HAMMING63","AR_MATRIX_CODE_3x3_PARITY65","AR_MATRIX_CODE_4x4","AR_MATRIX_CODE_4x4_BCH_13_9_3","AR_MATRIX_CODE_4x4_BCH_13_5_5","ArToolkitContext","_arMarkersControls","makeRotationY","makeRotationZ","detectionMode","matrixCodeType","cameraParametersUrl","maxDetectionRate","canvasWidth","canvasHeight","patternRatio","imageSmoothingEnabled","update","srcElement","forEach","markerControls","process","arMarkerControls","push","index","findIndex","splice","init","onCompleted","cameraParameters","ctx","mozImageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","setPatternDetectionMode","setMatrixCodeType","setPattRatio","getProjectionMatrix","projectionMatrixArr","getCameraMatrix","projectionMatrix","SoundWave","width","height","style","fillColor","isActive","className","aria-hidden","viewBox","xmlns","classnames","fill","x","rx","defaultProps","SoundIcon","strokeColor","isMute","transform","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","x1","y1","x2","y2","useWindowSize","getSize","innerWidth","innerHeight","useState","windowSize","setWindowSize","useEffect","handleResize","debounce","removeEventListener","useSourceStyles","isReady","videoRef","marginTop","marginLeft","current","videoWidth","videoHeight","sourceAspect","max","min","newWidth","newHeight","WebcamSource","props","sourceWidth","sourceHeight","canvasRef","videoSourceRef","useRef","setIsReady","sourceStyles","isMounted","clickHandler","play","navigator","mediaDevices","getUserMedia","audio","video","facingMode","then","stream","srcObject","document","body","readyInterval","setInterval","clearInterval","catch","err","console","log","getTracks","track","stop","createPortal","muted","autoPlay","playsInline","ref","node","display","top","left","getElementById","AR","initialScale","modelUrl","audioUrl","audioRef","modelRef","sceneRef","mixerRef","hammerRef","markerRootRef","mixerActionRef","pinchStartScale","panStartRotation","eventRotation","modelRotation","setIsMute","isModelLoaded","setIsModelLoaded","isMarkerFound","setIsMarkerFound","pause","MIN_SCALE","MAX_SCALE","Hammer","get","set","enable","on","e","scene","boundedScale","rotation","y","deltaRotation","destroy","deltaTime","isMarkerVisible","clock","Clock","camera","Camera","renderer","WebGLRenderer","canvas","antialias","alpha","arToolkitContext","Group","Scene","add","setClearColor","Color","setPixelRatio","devicePixelRatio","animate","requestAnimationFrame","getDelta","paused","render","GLTFLoader","load","gltf","modelScene","light1","AmbientLight","light2","PointLight","light3","animations","clip","AnimationMixer","clipAction","children","loop","preload","src","onClick","volume","App","isArEnabled","setArEnabled","prevIsArEnabled","Boolean","location","hostname","match","ReactDOM","StrictMode","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.0bea53b0.chunk.js","sourcesContent":["import { Matrix4, EventDispatcher } from 'three';\r\n\r\nconst { artoolkit } = window;\r\n\r\nlet currentId = 0;\r\n\r\nfunction ArMarkerControls (context, object3d, parameters) {\r\n  this.id = currentId++;\r\n  this.context = context;\r\n  this.object3d = object3d;\r\n  this.object3d.matrixAutoUpdate = false;\r\n  this.object3d.visible = false;\r\n\r\n  this.parameters = {\r\n    size : 1,\r\n    type : 'unknown',\r\n    patternUrl : null,\r\n    barcodeValue : null,\r\n    changeMatrixMode : 'modelViewMatrix',\r\n    minConfidence: 0.6,\r\n    ...parameters\r\n  }\r\n\r\n  context.addMarker(this);\r\n\r\n  this._initArtoolkit();\r\n};\r\n\r\nObject.assign(ArMarkerControls.prototype, EventDispatcher.prototype);\r\n\r\nArMarkerControls.prototype.dispose = function() {\r\n  this.context.removeMarker(this)\r\n}\r\n\r\nArMarkerControls.prototype.updateWithModelViewMatrix = function(modelViewMatrix) {\r\n  const markerObject3D = this.object3d;\r\n\r\n  markerObject3D.visible = true;\r\n\r\n  const tmpMatrix = new Matrix4().copy(this.context._artoolkitProjectionAxisTransformMatrix);\r\n  const markerAxisTransformMatrix = new Matrix4().makeRotationX(Math.PI/2);\r\n\r\n  tmpMatrix.multiply(modelViewMatrix);\r\n  tmpMatrix.multiply(markerAxisTransformMatrix);\r\n  modelViewMatrix.copy(tmpMatrix);\r\n\r\n  if (this.parameters.changeMatrixMode === 'modelViewMatrix') {\r\n    markerObject3D.matrix.copy(modelViewMatrix);\r\n  } else if (this.parameters.changeMatrixMode === 'cameraTransformMatrix') {\r\n    markerObject3D.matrix.getInverse(modelViewMatrix);\r\n  }\r\n\r\n  markerObject3D.matrix.decompose(markerObject3D.position, markerObject3D.quaternion, markerObject3D.scale);\r\n\r\n  this.dispatchEvent({\r\n    type: 'markerPositionUpdated',\r\n    data: markerObject3D.matrix.toArray()\r\n  });\r\n};\r\n\r\nArMarkerControls.prototype.name = function() {\r\n  const { type, patternUrl, barcodeValue } = this.parameters;\r\n\r\n  if (type === 'pattern') {\r\n    return `${type}-${patternUrl.replace(/^.*\\//g, '')}`;\r\n  } else if (type === 'barcode') {\r\n    return `${type}-${barcodeValue}`;\r\n  } else {\r\n    return type;\r\n  }\r\n};\r\n\r\nArMarkerControls.prototype._initArtoolkit = function() {\r\n  const { size, type, patternUrl, barcodeValue, minConfidence } = this.parameters;\r\n  const arController = this.context.arController;\r\n  let artoolkitMarkerId = null;\r\n\r\n  if (type === 'pattern') {\r\n    arController.loadMarker(patternUrl, markerId => {\r\n      artoolkitMarkerId = markerId;\r\n      arController.trackPatternMarkerId(artoolkitMarkerId, size);\r\n    });\r\n  } else if (type === 'barcode') {\r\n    artoolkitMarkerId = barcodeValue;\r\n    arController.trackBarcodeMarkerId(artoolkitMarkerId, size);\r\n  }\r\n\r\n  arController.addEventListener('getMarker', event => {\r\n    const { type: eventType, marker, matrix } = event.data;\r\n\r\n    if (\r\n      (eventType === artoolkit.PATTERN_MARKER && type === 'pattern' && marker.idPatt === artoolkitMarkerId && marker.cfPatt > minConfidence) ||\r\n      (eventType === artoolkit.BARCODE_MARKER && type === 'barcode' && marker.idMatrix === artoolkitMarkerId && marker.cfMatt < minConfidence)\r\n    ) {\r\n      this.updateWithModelViewMatrix(new Matrix4().fromArray(matrix));\r\n    }\r\n  });\r\n};\r\n\r\nexport default ArMarkerControls;\r\n","import { EventDispatcher, Matrix4 } from 'three';\n\nconst { artoolkit, ARController, ARCameraParam } = window;\n\nconst DETECTION_MODES = {\n  'color': artoolkit.AR_TEMPLATE_MATCHING_COLOR,\n  'color_and_matrix': artoolkit.AR_TEMPLATE_MATCHING_COLOR_AND_MATRIX,\n  'mono': artoolkit.AR_TEMPLATE_MATCHING_MONO,\n  'mono_and_matrix': artoolkit.AR_TEMPLATE_MATCHING_MONO_AND_MATRIX\n};\n\nconst MATRIX_CODE_TYPES = {\n  '3x3': artoolkit.AR_MATRIX_CODE_3x3,\n  '3x3_HAMMING63': artoolkit.AR_MATRIX_CODE_3x3_HAMMING63,\n  '3x3_PARITY65': artoolkit.AR_MATRIX_CODE_3x3_PARITY65,\n  '4x4': artoolkit.AR_MATRIX_CODE_4x4,\n  '4x4_BCH_13_9_3': artoolkit.AR_MATRIX_CODE_4x4_BCH_13_9_3,\n  '4x4_BCH_13_5_5': artoolkit.AR_MATRIX_CODE_4x4_BCH_13_5_5\n};\n\nfunction ArToolkitContext (parameters) {\n  this.arController = null;\n  this._arMarkersControls = [];\n  this._artoolkitProjectionAxisTransformMatrix = new Matrix4();\n  this._artoolkitProjectionAxisTransformMatrix.multiply(new Matrix4().makeRotationY(Math.PI));\n  this._artoolkitProjectionAxisTransformMatrix.multiply(new Matrix4().makeRotationZ(Math.PI));\n\n  this.parameters = {\n    detectionMode: 'mono',\n    matrixCodeType: '3x3',\n    cameraParametersUrl: 'parameters/camera_para.dat',\n    maxDetectionRate: 60,\n    canvasWidth: 640,\n    canvasHeight: 480,\n    patternRatio: 0.5,\n    imageSmoothingEnabled: false,\n    ...parameters\n  };\n}\n\nObject.assign(ArToolkitContext.prototype, EventDispatcher.prototype);\n\nArToolkitContext.prototype.update = function(srcElement) {\n  if (this.arController === null) {\n    return false;\n  };\n\n  this._arMarkersControls.forEach(markerControls => {\n    markerControls.object3d.visible = false;\n  });\n\n  this.arController.process(srcElement);\n\n  return true;\n};\n\nArToolkitContext.prototype.addMarker = function(arMarkerControls) {\n  this._arMarkersControls.push(arMarkerControls);\n};\n\nArToolkitContext.prototype.removeMarker = function(arMarkerControls) {\n  const index = this._arMarkersControls.findIndex(marker => marker.id === arMarkerControls.id);\n  this._arMarkersControls.splice(index, 1);\n};\n\nArToolkitContext.prototype.init = function(onCompleted = () => {}) {\n  const { cameraParametersUrl, canvasWidth, canvasHeight, imageSmoothingEnabled, detectionMode, matrixCodeType, patternRatio } = this.parameters;\n\n  const cameraParameters = new ARCameraParam(cameraParametersUrl, () => {\n    const arController = new ARController(canvasWidth, canvasHeight, cameraParameters);\n\n    this.arController = arController;\n    arController.ctx.mozImageSmoothingEnabled = imageSmoothingEnabled;\n    arController.ctx.webkitImageSmoothingEnabled = imageSmoothingEnabled;\n    arController.ctx.msImageSmoothingEnabled = imageSmoothingEnabled;\n    arController.ctx.imageSmoothingEnabled = imageSmoothingEnabled;\n\n    arController.setPatternDetectionMode(DETECTION_MODES[detectionMode]);\n    arController.setMatrixCodeType(MATRIX_CODE_TYPES[matrixCodeType]);\n    arController.setPattRatio(patternRatio);\n\n    onCompleted();\n  })\n  return this\n};\n\n/**\n * return the projection matrix\n */\nArToolkitContext.prototype.getProjectionMatrix = function() {\n  var projectionMatrixArr = this.arController.getCameraMatrix();\n  var projectionMatrix = new Matrix4().fromArray(projectionMatrixArr);\n\n  projectionMatrix.multiply(this._artoolkitProjectionAxisTransformMatrix);\n\n  return projectionMatrix;\n};\n\nexport default ArToolkitContext;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport './SoundWave.css';\n\nconst SoundWave = ({ width, height, style, fillColor, isActive, className }) => (\n  <svg\n    style={style}\n    width={width}\n    height={height}\n    aria-hidden='true'\n    viewBox='0 0 48 48'\n    xmlns='http://www.w3.org/2000/svg'\n    className={classnames(className, isActive && 'sound-wave--active')}\n  >\n    <g fill={fillColor}>\n      <rect className='sound-wave-bar sound-wave-bar-1' x='4.9' rx='1.5' />\n      <rect className='sound-wave-bar sound-wave-bar-2' x='13.5' rx='1.5' />\n      <rect className='sound-wave-bar sound-wave-bar-3' x='22.1' rx='1.5' />\n      <rect className='sound-wave-bar sound-wave-bar-2' x='30.7' rx='1.5' />\n      <rect className='sound-wave-bar sound-wave-bar-1' x='39.5' rx='1.5' />\n    </g>\n  </svg>\n);\n\nSoundWave.defaultProps = {\n  width               : '24',\n  height              : '24',\n  fillColor           : '#fff'\n};\n\nSoundWave.propTypes = {\n  style               : PropTypes.object,\n  width               : PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height              : PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  className           : PropTypes.string,\n  fillColor           : PropTypes.string\n};\n\nexport default SoundWave;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SoundIcon = ({ width, height, style, strokeColor, isMute }) => (\n  <svg\n    style={style}\n    width={width}\n    height={height}\n    aria-hidden='true'\n    viewBox='0 0 24 24'\n    xmlns='http://www.w3.org/2000/svg'\n  >\n    <g transform='translate(1, 3)' stroke={strokeColor} strokeWidth='1.5' fill='none' strokeLinecap='round' strokeLinejoin='round'>\n        <path d='M5.57,6.06 L1.25,6.06 C0.84,6.06 0.5,6.4 0.5,6.8 L0.5,11.36 C0.5,11.78 0.84,12.12 1.25,12.12 L5.57,12.12 C6.7,15.03 9.34,17.06 12.43,17.38 C12.64,17.4 12.85,17.33 13,17.18 C13.16,17.04 13.25,16.84 13.25,16.62 L13.25,1.55 C13.25,1.34 13.16,1.13 13,1 C12.85,0.85 12.64,0.78 12.43,0.8 C9.34,1.11 6.7,3.15 5.57,6.06 Z' />\n        {isMute ? (\n          <>\n            <line x1='21.32' y1='7' x2='17' y2='11.5' />\n            <line x1='17' y1='7' x2='21.32' y2='11.5' />\n          </>\n        ) : (\n          <>\n            <path d='M20.46,12.67 C21.85,10.49 21.85,7.69 20.46,5.5' />\n            <path d='M17.56,11.357 C18.6,10.06 18.6,8.2 17.56,6.9' />\n          </>\n        )}\n    </g>\n  </svg>\n);\n\nSoundIcon.defaultProps = {\n  width               : '24',\n  height              : '24',\n  strokeColor         : '#fff'\n};\n\nSoundIcon.propTypes = {\n  style               : PropTypes.object,\n  width               : PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height              : PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  className           : PropTypes.string,\n  fillColor           : PropTypes.string\n};\n\nexport default SoundIcon;\n","import { useState, useEffect } from 'react';\r\nimport debounce from 'lodash/debounce';\r\n\r\nconst useWindowSize = () => {\r\n  const getSize = () => ({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight\r\n  });\r\n\r\n  const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n  useEffect(() => {\r\n    const handleResize = debounce(() => {\r\n      setWindowSize(getSize());\r\n    }, 50);\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return windowSize;\r\n};\r\n\r\nexport default useWindowSize;","import useWindowSize from './useWindowSize';\r\n\r\nconst useSourceStyles = (isReady, videoRef) => {\r\n  const { width, height } = useWindowSize();\r\n\r\n  if (!isReady) {\r\n    return {\r\n      width,\r\n      height,\r\n      marginTop: 0,\r\n      marginLeft: 0\r\n    };\r\n  }\r\n\r\n  const { videoWidth, videoHeight } = videoRef.current;\r\n  const sourceWidth = Math.max(videoWidth, videoHeight);\r\n  const sourceHeight = Math.min(videoWidth, videoHeight);\r\n\r\n  const sourceAspect = sourceWidth / sourceHeight;\r\n  const screenAspect = width / height;\r\n\r\n  if (screenAspect < sourceAspect) {\r\n    const newWidth = sourceAspect * height;\r\n\r\n    return {\r\n      height,\r\n      width: newWidth,\r\n      marginTop: 0,\r\n      marginLeft: -(newWidth - width) / 2\r\n    };\r\n  } else {\r\n    const newHeight = 1 / (sourceAspect / width);\r\n\r\n    return {\r\n      width,\r\n      height: newHeight,\r\n      marginTop: -(newHeight - height) / 2,\r\n      marginLeft: 0\r\n    };\r\n  }\r\n};\r\n\r\nexport default useSourceStyles;\r\n","import React, { useRef, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport useSourceStyles from 'hooks/useSourceStyles';\n\n\nconst WebcamSource = props => {\n  const { sourceWidth, sourceHeight, canvasRef, videoSourceRef } = props;\n  const videoRef = useRef();\n  const [isReady, setIsReady] = useState(false);\n  const sourceStyles = useSourceStyles(isReady, videoRef);\n\n  useEffect(() => {\n    let isMounted = true;\n    const clickHandler = () => {\n      videoRef.current.play();\n    };\n\n    const userMediaConstraints = {\n      audio: false,\n      video: {\n        facingMode: 'environment',\n        width: {\n          //ideal: sourceWidth,\n          min: 640,\n          max: 1920\n        },\n        height: {\n          //ideal: sourceHeight,\n          min: 480,\n          max: 1080\n        }\n      }\n    };\n\n    navigator.mediaDevices.getUserMedia(userMediaConstraints)\n      .then(stream => {\n        if (isMounted) {\n          videoRef.current.srcObject = stream;\n          document.body.addEventListener('click', clickHandler);\n\n          const readyInterval = setInterval(() => {\n            if (videoRef.current && videoRef.current.videoWidth) {\n              setIsReady(true);\n              clearInterval(readyInterval);\n            }\n          }, 20);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n    return () => {\n      isMounted = false;\n      document.body.removeEventListener('click', clickHandler);\n\n      if (videoRef.current.srcObject) {\n        videoRef.current.srcObject.getTracks()\n          .forEach(track => track.stop());\n      }\n    };\n  }, [sourceWidth, sourceHeight]);\n\n  return createPortal(\n    <>\n      <video\n        muted\n        autoPlay\n        playsInline\n        ref={node => {\n          videoRef.current = node;\n          videoSourceRef.current = node;\n        }}\n        style={{\n          display: isReady ? 'block' : 'none',\n          ...sourceStyles\n        }}\n      />\n      <canvas\n        ref={canvasRef}\n        width={sourceWidth}\n        height={sourceHeight}\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          ...sourceStyles\n        }}\n      />\n    </>\n  , document.getElementById('ar-container'));\n};\n\nWebcamSource.defaultProps = {\n  sourceWidth: 640,\n  sourceHeight: 480,\n  canvasRef: {},\n  videoSourceRef: {}\n};\n\nexport default WebcamSource;\n","import Hammer from 'hammerjs';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { Scene, Camera, WebGLRenderer, Group, Color, PointLight, AmbientLight, AnimationMixer, Clock } from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\n\r\nimport ArMarkerControls from './armarkercontrols';\r\nimport ArToolkitContext from './artoolkitcontext';\r\n\r\nimport SoundWave from 'components/SoundWave';\r\nimport SoundIcon from 'components/SoundIcon';\r\nimport WebcamSource from 'components/WebcamSource';\r\n\r\nimport './AR.css';\r\n\r\nconst AR = props => {\r\n  const { initialScale, patternUrl, cameraParametersUrl, modelUrl, audioUrl } = props;\r\n  const audioRef = useRef();\r\n  const modelRef = useRef();\r\n  const sceneRef = useRef();\r\n  const mixerRef = useRef();\r\n  const hammerRef = useRef();\r\n  const canvasRef = useRef();\r\n  const markerRootRef = useRef();\r\n  const videoSourceRef = useRef();\r\n  const mixerActionRef = useRef();\r\n  const pinchStartScale = useRef();\r\n  const panStartRotation = useRef({ eventRotation: 0, modelRotation: 0 });\r\n  const [isMute, setIsMute] = useState(false);\r\n  const [isModelLoaded, setIsModelLoaded] = useState(false);\r\n  const [isMarkerFound, setIsMarkerFound] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    if (isMarkerFound && isModelLoaded) {\r\n      audioRef.current.play();\r\n    } else {\r\n      audioRef.current.pause();\r\n    }\r\n  }, [isMarkerFound, isModelLoaded])\r\n\r\n  useEffect(() => {\r\n    const onPinchStart = e => {\r\n      if (modelRef.current) {\r\n        pinchStartScale.current = modelRef.current.scene.scale.x;\r\n      }\r\n    };\r\n\r\n    const onRotateStart = e => {\r\n      if (modelRef.current) {\r\n        panStartRotation.current = {\r\n          modelRotation: modelRef.current.scene.rotation.y,\r\n          eventRotation: e.rotation\r\n        };\r\n      }\r\n    };\r\n\r\n    const MIN_SCALE = initialScale / 3;\r\n    const MAX_SCALE = initialScale * 3;\r\n\r\n    hammerRef.current = new Hammer(document.getElementById('ar-container'));\r\n    hammerRef.current.get('pan').set({ enable: false });\r\n    hammerRef.current.get('pinch').set({ enable: true });\r\n    hammerRef.current.get('rotate').set({ enable: true });\r\n    hammerRef.current.on('pinchstart', onPinchStart);\r\n    hammerRef.current.on('pinch', e => {\r\n      if (pinchStartScale.current && modelRef.current) {\r\n        const scale = pinchStartScale.current * e.scale;\r\n        const boundedScale = Math.min(Math.max(scale, MIN_SCALE), MAX_SCALE);\r\n\r\n        modelRef.current.scene.scale.set(boundedScale, boundedScale, boundedScale);\r\n      }\r\n    });\r\n    hammerRef.current.on('rotatestart', onRotateStart);\r\n    hammerRef.current.on('rotate', e => {\r\n      if (modelRef.current) {\r\n        const deltaRotationAngle = e.rotation - panStartRotation.current.eventRotation;\r\n        const deltaRotation = deltaRotationAngle / 180 * Math.PI;\r\n\r\n        modelRef.current.scene.rotation.y = panStartRotation.current.modelRotation - deltaRotation;\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      hammerRef.current.destroy();\r\n    }\r\n  }, [initialScale])\r\n\r\n  useEffect(() => {\r\n    let deltaTime = 0;\r\n    let isMounted = true;\r\n    let isMarkerVisible = false;\r\n    const { width, height } = { width: 640, height: 480 };\r\n    const clock = new Clock();\r\n    const camera = new Camera();\r\n    const renderer = new WebGLRenderer({\r\n      canvas: canvasRef.current,\r\n      antialias: true,\r\n      alpha: true\r\n    });\r\n    const arToolkitContext = new ArToolkitContext({\r\n      cameraParametersUrl,\r\n      detectionMode: 'mono',\r\n      canvasWidth: width,\r\n      canvasHeight: height\r\n    });\r\n    \r\n    markerRootRef.current = new Group();\r\n    sceneRef.current = new Scene();\r\n    sceneRef.current.add(camera);\r\n    sceneRef.current.add(markerRootRef.current);\r\n    renderer.setClearColor(new Color('lightgrey'), 0)\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n    arToolkitContext.init(() => {\r\n      camera.projectionMatrix.copy(arToolkitContext.getProjectionMatrix());\r\n      new ArMarkerControls(arToolkitContext, markerRootRef.current, {\r\n        type: 'pattern',\r\n        patternUrl\r\n      });\r\n    });\r\n\r\n    const render = () => {\r\n      renderer.render(sceneRef.current, camera);\r\n    };\r\n\r\n    const update = () => {\r\n      if (isMarkerVisible !== markerRootRef.current.visible) {\r\n        isMarkerVisible = markerRootRef.current.visible;\r\n        setIsMarkerFound(markerRootRef.current.visible);\r\n\r\n        if (mixerActionRef.current) {\r\n          mixerActionRef.current.paused = !isMarkerVisible;\r\n        }\r\n      }\r\n\r\n      if (mixerRef.current) {\r\n        mixerRef.current.update(deltaTime);\r\n      }\r\n\r\n      if (videoSourceRef.current) {\r\n        arToolkitContext.update(videoSourceRef.current);\r\n      }\r\n    };\r\n    \r\n    \r\n    const animate = () => {\r\n      if (isMounted) {\r\n        requestAnimationFrame(animate);\r\n        deltaTime = clock.getDelta();\r\n        update();\r\n        render();\r\n      }\r\n    };\r\n\r\n    animate();\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [cameraParametersUrl, patternUrl]);\r\n\r\n  useEffect(() => {\r\n    new GLTFLoader()\r\n    .load(modelUrl, gltf => {\r\n      modelRef.current = gltf;\r\n      const modelScene = gltf.scene;\r\n      const light1 = new AmbientLight(0xffffff, 2);\r\n      const light2 = new PointLight(0xffffff, 1, 0, 2);\r\n      const light3 = new PointLight(0xffffff, 1, 0, 2);\r\n\r\n      markerRootRef.current.add(light1);\r\n      light2.position.set(0, 1, 1);\r\n      markerRootRef.current.add(light2);\r\n      light3.position.set(0, 1, -1);\r\n      markerRootRef.current.add(light3);\r\n\r\n      modelScene.scale.set(initialScale, initialScale, initialScale);\r\n\r\n      markerRootRef.current.add(modelScene);\r\n\r\n      if (gltf.animations[0]) {\r\n        const clip = gltf.animations[0];\r\n\r\n        mixerRef.current = new AnimationMixer(modelScene);\r\n        mixerActionRef.current = mixerRef.current.clipAction(clip);\r\n        mixerActionRef.current.play();\r\n        mixerActionRef.current.paused = !markerRootRef.current.visible;\r\n      }\r\n\r\n      setIsModelLoaded(true);\r\n    });\r\n\r\n    return () => {\r\n      setIsModelLoaded(false);\r\n\r\n      markerRootRef.current.children = [];\r\n    };\r\n  }, [modelUrl, initialScale])\r\n\r\n  return (\r\n    <div>\r\n        <WebcamSource\r\n          canvasRef={canvasRef}\r\n          videoSourceRef={videoSourceRef}\r\n        />\r\n        <div className='ar-icons-overlay' />\r\n        <audio\r\n          loop\r\n          ref={audioRef}\r\n          preload='auto'\r\n        >\r\n          <source\r\n            src={audioUrl}\r\n            type='audio/mpeg'\r\n          />\r\n        </audio>\r\n        <button\r\n          className='ar-icon ar-icon-sound'\r\n          onClick={() => {\r\n            setIsMute(!isMute);\r\n            audioRef.current.volume = isMute ? 1 : 0;\r\n          }}\r\n        >\r\n          <SoundIcon\r\n            width={32}\r\n            height={32}\r\n            isMute={isMute}\r\n          />\r\n        </button>\r\n        <SoundWave\r\n          width={32}\r\n          height={32}\r\n          isActive={isMarkerFound}\r\n          className='ar-icon ar-icon-wave'\r\n        />\r\n        {!isModelLoaded &&\r\n          <div className='ar-loading'>\r\n            Loading AR model...\r\n          </div>\r\n        }\r\n    </div>\r\n  );\r\n};\r\n\r\nAR.defaultProps = {\r\n  initialScale: 0.0005,\r\n  audioUrl: `${process.env.PUBLIC_URL}/audio/anchor.mp3`,\r\n  modelUrl: `${process.env.PUBLIC_URL}/models/anchor/model.gltf`,\r\n  patternUrl: `${process.env.PUBLIC_URL}/data/hiro.patt`,\r\n  cameraParametersUrl: `${process.env.PUBLIC_URL}/data/camera_para.dat`\r\n};\r\n\r\nexport default AR;\r\n","import React, { useState } from 'react';\n\nimport AR from 'components/AR';\n\nimport './App.css';\n\n\nfunction App() {\n  const [isArEnabled, setArEnabled] = useState(false);\n  return (\n    <div className='App'>\n      <button\n        className='App-button'\n        onClick={() => setArEnabled(prevIsArEnabled => !prevIsArEnabled)}\n      >\n        {isArEnabled ? 'Disable' : 'Enable'} AR\n      </button>\n      {isArEnabled &&\n        <AR />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}