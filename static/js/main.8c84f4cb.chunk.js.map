{"version":3,"sources":["components/SoundWave/SoundWave.js","components/SoundIcon/SoundIcon.js","hooks/useWindowSize.js","hooks/useSourceStyles.js","components/WebcamSource/WebcamSource.js","components/AR/AR.js","components/App/App.js","scripts/threex-artoolkitsource.js","scripts/threex-artoolkitcontext.js","scripts/threex-arbasecontrols.js","scripts/threex-armarkercontrols.js","serviceWorker.js","index.js"],"names":["SoundWave","width","height","style","fillColor","isActive","className","aria-hidden","viewBox","xmlns","classnames","fill","x","rx","defaultProps","SoundIcon","strokeColor","isMute","transform","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","x1","y1","x2","y2","useWindowSize","getSize","window","innerWidth","innerHeight","useState","windowSize","setWindowSize","useEffect","handleResize","debounce","addEventListener","removeEventListener","useSourceStyles","isReady","videoRef","marginTop","marginLeft","sourceAspect","current","videoWidth","videoHeight","newWidth","newHeight","WebcamSource","props","sourceWidth","sourceHeight","canvasRef","videoSourceRef","useRef","setIsReady","sourceStyles","console","log","isMounted","clickHandler","play","userMediaConstraints","audio","video","facingMode","ideal","min","max","navigator","mediaDevices","getUserMedia","then","stream","srcObject","document","body","readyInterval","setInterval","clearInterval","createPortal","muted","autoPlay","playsInline","ref","node","position","top","left","getElementById","AR","initialScale","patternUrl","cameraParametersUrl","modelUrl","audioUrl","audioRef","modelRef","hammerRef","pinchStartScale","panStartRotation","eventRotation","modelRotation","setIsMute","isMarkerFound","setIsMarkerFound","pause","MIN_SCALE","MAX_SCALE","Hammer","get","set","enable","on","e","scene","scale","boundedScale","Math","rotation","y","deltaRotation","PI","destroy","mixer","mixerAction","deltaTime","isMarkerVisible","THREEx","ArToolkitContext","ArMarkerControls","Scene","clock","Clock","camera","Camera","renderer","WebGLRenderer","canvas","antialias","alpha","arToolkitContext","detectionMode","canvasWidth","canvasHeight","markerRoot","Group","add","setClearColor","Color","setPixelRatio","devicePixelRatio","init","projectionMatrix","copy","getProjectionMatrix","type","GLTFLoader","load","gltf","modelScene","light3","AmbientLight","light4","PointLight","light5","AnimationMixer","clip","animations","clipAction","paused","animate","requestAnimationFrame","getDelta","visible","update","render","loop","preload","src","onClick","volume","process","App","isArEnabled","setArEnabled","prevIsArEnabled","ArToolkitSource","parameters","this","ready","domElement","displayWidth","displayHeight","prototype","dispose","removeChild","onReady","onError","_this","_initSourceWebcam","appendChild","zIndex","error","alert","name","message","createElement","setAttribute","enumerateDevices","devices","interval","catch","onResizeElement","screenWidth","screenHeight","copyElementSizeTo","otherElement","artoolkit","ARController","ARCameraParam","arController","arucoContext","initialized","_updatedAt","_arMarkersControls","matrixCodeType","maxDetectionRate","patternRatio","imageSmoothingEnabled","assert","indexOf","Object","assign","EventDispatcher","onCompleted","_initArtoolkit","dispatchEvent","srcElement","present","performance","now","forEach","markerControls","object3d","_updateArtoolkit","addMarker","arMarkerControls","push","removeMarker","index","findIndex","marker","id","splice","_artoolkitProjectionAxisTransformMatrix","Matrix4","multiply","makeRotationY","makeRotationZ","cameraParameters","ctx","mozImageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","AR_TEMPLATE_MATCHING_COLOR","AR_TEMPLATE_MATCHING_COLOR_AND_MATRIX","AR_TEMPLATE_MATCHING_MONO","AR_TEMPLATE_MATCHING_MONO_AND_MATRIX","undefined","setPatternDetectionMode","AR_MATRIX_CODE_3x3","AR_MATRIX_CODE_3x3_HAMMING63","AR_MATRIX_CODE_3x3_PARITY65","AR_MATRIX_CODE_4x4","AR_MATRIX_CODE_4x4_BCH_13_9_3","AR_MATRIX_CODE_4x4_BCH_13_5_5","setMatrixCodeType","setPattRatio","projectionMatrixArr","getCameraMatrix","fromArray","ArBaseControls","matrixAutoUpdate","context","call","size","barcodeValue","changeMatrixMode","minConfidence","key","newValue","warn","setParameters","create","updateWithModelViewMatrix","modelViewMatrix","markerObject3D","tmpMatrix","markerAxisTransformMatrix","makeRotationX","matrix","getInverse","decompose","quaternion","data","toArray","replace","artoolkitMarkerId","delayedInitTimerId","loadMarker","markerId","trackPatternMarkerId","trackBarcodeMarkerId","event","PATTERN_MARKER","idPatt","onMarkerFound","BARCODE_MARKER","idMatrix","UNKNOWN_MARKER","postInit","cfPatt","cfMatt","Boolean","location","hostname","match","ReactDOM","StrictMode","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.8c84f4cb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport './SoundWave.css';\n\nconst SoundWave = ({ width, height, style, fillColor, isActive, className }) => (\n  <svg\n    style={style}\n    width={width}\n    height={height}\n    aria-hidden='true'\n    viewBox='0 0 48 48'\n    xmlns='http://www.w3.org/2000/svg'\n    className={classnames(className, isActive && 'sound-wave--active')}\n  >\n    <g fill={fillColor}>\n      <rect className='sound-wave-bar sound-wave-bar-1' x='4.9' rx='1.5' />\n      <rect className='sound-wave-bar sound-wave-bar-2' x='13.5' rx='1.5' />\n      <rect className='sound-wave-bar sound-wave-bar-3' x='22.1' rx='1.5' />\n      <rect className='sound-wave-bar sound-wave-bar-2' x='30.7' rx='1.5' />\n      <rect className='sound-wave-bar sound-wave-bar-1' x='39.5' rx='1.5' />\n    </g>\n  </svg>\n);\n\nSoundWave.defaultProps = {\n  width               : '24',\n  height              : '24',\n  fillColor           : '#fff'\n};\n\nSoundWave.propTypes = {\n  style               : PropTypes.object,\n  width               : PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height              : PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  className           : PropTypes.string,\n  fillColor           : PropTypes.string\n};\n\nexport default SoundWave;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SoundIcon = ({ width, height, style, strokeColor, isMute }) => (\n  <svg\n    style={style}\n    width={width}\n    height={height}\n    aria-hidden='true'\n    viewBox='0 0 24 24'\n    xmlns='http://www.w3.org/2000/svg'\n  >\n    <g transform='translate(1, 3)' stroke={strokeColor} strokeWidth='1.5' fill='none' strokeLinecap='round' strokeLinejoin='round'>\n        <path d='M5.57,6.06 L1.25,6.06 C0.84,6.06 0.5,6.4 0.5,6.8 L0.5,11.36 C0.5,11.78 0.84,12.12 1.25,12.12 L5.57,12.12 C6.7,15.03 9.34,17.06 12.43,17.38 C12.64,17.4 12.85,17.33 13,17.18 C13.16,17.04 13.25,16.84 13.25,16.62 L13.25,1.55 C13.25,1.34 13.16,1.13 13,1 C12.85,0.85 12.64,0.78 12.43,0.8 C9.34,1.11 6.7,3.15 5.57,6.06 Z' />\n        {isMute ? (\n          <>\n            <line x1='21.32' y1='7' x2='17' y2='11.5' />\n            <line x1='17' y1='7' x2='21.32' y2='11.5' />\n          </>\n        ) : (\n          <>\n            <path d='M20.46,12.67 C21.85,10.49 21.85,7.69 20.46,5.5' />\n            <path d='M17.56,11.357 C18.6,10.06 18.6,8.2 17.56,6.9' />\n          </>\n        )}\n    </g>\n  </svg>\n);\n\nSoundIcon.defaultProps = {\n  width               : '24',\n  height              : '24',\n  strokeColor         : '#fff'\n};\n\nSoundIcon.propTypes = {\n  style               : PropTypes.object,\n  width               : PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height              : PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  className           : PropTypes.string,\n  fillColor           : PropTypes.string\n};\n\nexport default SoundIcon;\n","import { useState, useEffect } from 'react';\r\nimport debounce from 'lodash/debounce';\r\n\r\nconst useWindowSize = () => {\r\n  const getSize = () => ({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight\r\n  });\r\n\r\n  const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n  useEffect(() => {\r\n    const handleResize = debounce(() => {\r\n      setWindowSize(getSize());\r\n    }, 50);\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return windowSize;\r\n};\r\n\r\nexport default useWindowSize;","import useWindowSize from './useWindowSize';\r\n\r\nconst useSourceStyles = (isReady, videoRef) => {\r\n  const { width, height } = useWindowSize();\r\n\r\n  if (!isReady) {\r\n    return {\r\n      width,\r\n      height,\r\n      marginTop: 0,\r\n      marginLeft: 0\r\n    };\r\n  }\r\n\r\n  const sourceWidth = videoRef.current.videoWidth;\r\n  const sourceHeight = videoRef.current.videoHeight;\r\n  const sourceAspect = sourceWidth / sourceHeight;\r\n  const screenAspect = width / height;\r\n\r\n  if (screenAspect < sourceAspect) {\r\n    const newWidth = sourceAspect * height;\r\n\r\n    return {\r\n      height,\r\n      width: newWidth,\r\n      marginTop: 0,\r\n      marginLeft: -(newWidth - width) / 2\r\n    };\r\n  } else {\r\n    const newHeight = 1 / (sourceAspect / width);\r\n\r\n    return {\r\n      width,\r\n      height: newHeight,\r\n      marginTop: -(newHeight - height) / 2,\r\n      marginLeft: 0\r\n    };\r\n  }\r\n};\r\n\r\nexport default useSourceStyles;\r\n","import React, { useRef, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport useSourceStyles from 'hooks/useSourceStyles';\n\n\nconst WebcamSource = props => {\n  const { sourceWidth, sourceHeight, canvasRef, videoSourceRef } = props;\n  const videoRef = useRef();\n  const [isReady, setIsReady] = useState(false);\n  const sourceStyles = useSourceStyles(isReady, videoRef);\n\n  console.log(sourceStyles);\n\n  useEffect(() => {\n    let isMounted = true;\n    const clickHandler = () => {\n      videoRef.current.play();\n    };\n\n    const userMediaConstraints = {\n      audio: false,\n      video: {\n        facingMode: 'environment',\n        width: {\n          ideal: sourceWidth,\n          min: 640,\n          max: 1920\n        },\n        height: {\n          ideal: sourceHeight,\n          min: 480,\n          max: 1080\n        }\n      }\n    };\n\n    navigator.mediaDevices.getUserMedia(userMediaConstraints)\n      .then(stream => {\n        if (isMounted) {\n          videoRef.current.srcObject = stream;\n          document.body.addEventListener('click', clickHandler);\n\n          const readyInterval = setInterval(() => {\n            if (videoRef.current && videoRef.current.videoWidth) {\n              setIsReady(true);\n              clearInterval(readyInterval);\n            }\n          }, 20);\n        }\n    });\n\n    return () => {\n      isMounted = false;\n      document.body.removeEventListener('click', clickHandler);\n    };\n  }, [sourceWidth, sourceHeight]);\n\n  return createPortal(\n    <>\n      <video\n        muted\n        autoPlay\n        playsInline\n        ref={node => {\n          videoRef.current = node;\n          videoSourceRef.current = node;\n        }}\n        style={sourceStyles}\n      />\n      <canvas\n        ref={canvasRef}\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          ...sourceStyles\n        }}\n      />\n    </>\n  , document.getElementById('ar-container'));\n};\n\nWebcamSource.defaultProps = {\n  sourceWidth: 640,\n  sourceHeight: 480,\n  canvasRef: {},\n  videoSourceRef: {}\n};\n\nexport default WebcamSource;\n","import Hammer from 'hammerjs';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { Scene, Camera, WebGLRenderer, Group, Color, PointLight, AmbientLight, AnimationMixer, Clock } from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\n\r\nimport SoundWave from 'components/SoundWave';\r\nimport SoundIcon from 'components/SoundIcon';\r\nimport WebcamSource from 'components/WebcamSource';\r\n\r\nimport './AR.css';\r\n\r\nconst AR = props => {\r\n  const { initialScale, patternUrl, cameraParametersUrl, modelUrl, audioUrl } = props;\r\n  const audioRef = useRef();\r\n  const modelRef = useRef();\r\n  const hammerRef = useRef();\r\n  const canvasRef = useRef();\r\n  const videoSourceRef = useRef();\r\n  const pinchStartScale = useRef();\r\n  const panStartRotation = useRef({ eventRotation: 0, modelRotation: 0 });\r\n  const [isMute, setIsMute] = useState(false);\r\n  const [isMarkerFound, setIsMarkerFound] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    if (isMarkerFound) {\r\n      audioRef.current.play();\r\n    } else {\r\n      audioRef.current.pause();\r\n    }\r\n  }, [isMarkerFound])\r\n\r\n  useEffect(() => {\r\n    const onPinchStart = e => {\r\n      if (modelRef.current) {\r\n        pinchStartScale.current = modelRef.current.scene.scale.x;\r\n      }\r\n    };\r\n\r\n    const onRotateStart = e => {\r\n      if (modelRef.current) {\r\n        panStartRotation.current = {\r\n          modelRotation: modelRef.current.scene.rotation.y,\r\n          eventRotation: e.rotation\r\n        };\r\n      }\r\n    };\r\n\r\n    const MIN_SCALE = initialScale / 3;\r\n    const MAX_SCALE = initialScale * 3;\r\n\r\n    hammerRef.current = new Hammer(document.getElementById('ar-container'));\r\n    hammerRef.current.get('pan').set({ enable: false });\r\n    hammerRef.current.get('pinch').set({ enable: true });\r\n    hammerRef.current.get('rotate').set({ enable: true });\r\n    hammerRef.current.on('pinchstart', onPinchStart);\r\n    hammerRef.current.on('pinch', e => {\r\n      if (pinchStartScale.current && modelRef.current) {\r\n        const scale = pinchStartScale.current * e.scale;\r\n        const boundedScale = Math.min(Math.max(scale, MIN_SCALE), MAX_SCALE);\r\n\r\n        modelRef.current.scene.scale.set(boundedScale, boundedScale, boundedScale);\r\n      }\r\n    });\r\n    hammerRef.current.on('rotatestart', onRotateStart);\r\n    hammerRef.current.on('rotate', e => {\r\n      if (modelRef.current) {\r\n        const deltaRotationAngle = e.rotation - panStartRotation.current.eventRotation;\r\n        const deltaRotation = deltaRotationAngle / 180 * Math.PI;\r\n\r\n        modelRef.current.scene.rotation.y = panStartRotation.current.modelRotation - deltaRotation;\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      hammerRef.current.destroy();\r\n    }\r\n  }, [initialScale])\r\n\r\n  useEffect(() => {\r\n    let mixer;\r\n    let mixerAction;\r\n    let deltaTime = 0;\r\n    let isMounted = true;\r\n    let isMarkerVisible = false;\r\n    const { width, height } = { width: 640, height: 480 };\r\n    const { ArToolkitContext, ArMarkerControls } = window.THREEx;\r\n    const scene = new Scene();\r\n    const clock = new Clock();\r\n    const camera = new Camera();\r\n    const renderer = new WebGLRenderer({\r\n      canvas: canvasRef.current,\r\n      antialias: true,\r\n      alpha: true\r\n    });\r\n    const arToolkitContext = new ArToolkitContext({\r\n      cameraParametersUrl,\r\n      detectionMode: 'mono',\r\n      canvasWidth: width,\r\n      canvasHeight: height\r\n    });\r\n    const markerRoot = new Group();\r\n  \r\n    scene.add(camera);\r\n    renderer.setClearColor(new Color('lightgrey'), 0)\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n    arToolkitContext.init(() => {\r\n      camera.projectionMatrix.copy(arToolkitContext.getProjectionMatrix());\r\n    });\r\n\r\n    new ArMarkerControls(arToolkitContext, markerRoot, {\r\n      type: 'pattern',\r\n      patternUrl\r\n    })\r\n\r\n    new GLTFLoader()\r\n      .load(modelUrl, gltf => {\r\n        modelRef.current = gltf;\r\n        const modelScene = gltf.scene;\r\n\r\n        modelScene.scale.set(initialScale, initialScale, initialScale);\r\n\r\n        var light3 = new AmbientLight(0xffffff, 1);\r\n        markerRoot.add(light3);\r\n  \r\n        var light4 = new PointLight(0xffffff, 1, 0, 2);\r\n        light4.position.set(0, 1, 1);\r\n        markerRoot.add(light4);\r\n\r\n        var light5 = new PointLight(0xffffff, 1, 0, 2);\r\n        light5.position.set(0, 1, -1);\r\n        markerRoot.add(light5);\r\n\r\n        markerRoot.add(modelScene);\r\n\r\n        mixer = new AnimationMixer(modelScene);\r\n        const clip = gltf.animations[0];\r\n\r\n        mixerAction = mixer.clipAction(clip);\r\n        mixerAction.play();\r\n        mixerAction.paused = !isMarkerVisible;\r\n        \r\n        scene.add(markerRoot);\r\n      });\r\n\r\n    const render = () => {\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    const update = () => {\r\n      if (isMarkerVisible !== markerRoot.visible) {\r\n        isMarkerVisible = markerRoot.visible;\r\n        setIsMarkerFound(markerRoot.visible);\r\n\r\n        if (mixerAction) {\r\n          mixerAction.paused = !isMarkerVisible;\r\n        }\r\n      }\r\n\r\n      if (mixer) {\r\n        mixer.update(deltaTime);\r\n      }\r\n\r\n      if (videoSourceRef.current) {\r\n        arToolkitContext.update(videoSourceRef.current);\r\n      }\r\n    };\r\n    \r\n    \r\n    const animate = () => {\r\n      if (isMounted) {\r\n        requestAnimationFrame(animate);\r\n        deltaTime = clock.getDelta();\r\n        update();\r\n        render();\r\n      }\r\n    };\r\n\r\n    animate();\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [initialScale, cameraParametersUrl, patternUrl, modelUrl]);\r\n\r\n  return (\r\n    <div>\r\n        <WebcamSource\r\n          canvasRef={canvasRef}\r\n          videoSourceRef={videoSourceRef}\r\n        />\r\n        <div className='ar-icons-overlay' />\r\n        <audio\r\n          loop\r\n          ref={audioRef}\r\n          preload='auto'\r\n        >\r\n          <source\r\n            src={audioUrl}\r\n            type='audio/mpeg'\r\n          />\r\n        </audio>\r\n        <button\r\n          className='ar-icon ar-icon-sound'\r\n          onClick={() => {\r\n            setIsMute(!isMute);\r\n            audioRef.current.volume = isMute ? 1 : 0;\r\n          }}\r\n        >\r\n          <SoundIcon\r\n            width={32}\r\n            height={32}\r\n            isMute={isMute}\r\n          />\r\n        </button>\r\n        <SoundWave\r\n          width={32}\r\n          height={32}\r\n          isActive={isMarkerFound}\r\n          className='ar-icon ar-icon-wave'\r\n        />\r\n    </div>\r\n  );\r\n};\r\n\r\nAR.defaultProps = {\r\n  initialScale: 0.0005,\r\n  audioUrl: `${process.env.PUBLIC_URL}/audio/anchor.mp3`,\r\n  modelUrl: `${process.env.PUBLIC_URL}/models/anchor/MiraiKoukai7.gltf`,\r\n  patternUrl: `${process.env.PUBLIC_URL}/data/hiro.patt`,\r\n  cameraParametersUrl: `${process.env.PUBLIC_URL}/data/camera_para.dat`\r\n};\r\n\r\nexport default AR;\r\n","import React, { useState } from 'react';\n\nimport AR from 'components/AR';\n\nimport './App.css';\n\n\nfunction App() {\n  const [isArEnabled, setArEnabled] = useState(false);\n  return (\n    <div className='App'>\n      <button\n        className='App-button'\n        onClick={() => setArEnabled(prevIsArEnabled => !prevIsArEnabled)}\n      >\n        {isArEnabled ? 'Disable' : 'Enable'} AR\n      </button>\n      {isArEnabled &&\n        <AR />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","window.THREEx = window.THREEx || {};\r\n\r\nconst { THREEx } = window;\r\n\r\nTHREEx.ArToolkitSource = function(parameters) {\t\r\n\tthis.ready = false;\r\n  this.domElement = null;\r\n\r\n\tthis.parameters = {\r\n\t\tsourceWidth: 640,\r\n\t\tsourceHeight: 480,\r\n\t\tdisplayWidth: 640,\r\n\t\tdisplayHeight: 480,\r\n\t\t...parameters\r\n\t}\r\n}\r\n\r\nTHREEx.ArToolkitSource.prototype.dispose = function(){\r\n\tvar _this = this;\r\n\r\n\tdocument.getElementById('ar-container').removeChild(_this.domElement);\r\n};\r\n\r\nTHREEx.ArToolkitSource.prototype.init = function(onReady, onError){\r\n\tvar _this = this;\r\n\r\n\tfunction onSourceReady() {\r\n\t\tdocument.getElementById('ar-container').appendChild(_this.domElement);\r\n\t\t_this.ready = true;\r\n\t\tonReady && onReady();\r\n\t}\r\n\r\n\tthis.domElement = this._initSourceWebcam(onSourceReady, onError);\r\n\tthis.domElement.style.position = 'absolute';\r\n\tthis.domElement.style.top = '0px';\r\n\tthis.domElement.style.left = '0px';\r\n\tthis.domElement.style.zIndex = '-2';\r\n\treturn this;\r\n}\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n//          handle webcam source\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\nTHREEx.ArToolkitSource.prototype._initSourceWebcam = function(onReady, onError) {\r\n\t// var _this = this\r\n\r\n\t// init default value\r\n\tonError = onError || function(error){\t\r\n\t\talert('Webcam Error\\nName: '+error.name + '\\nMessage: '+error.message)\r\n\t}\r\n\r\n\tvar domElement = document.createElement('video');\r\n\tdomElement.setAttribute('autoplay', '');\r\n\tdomElement.setAttribute('muted', '');\r\n\tdomElement.setAttribute('playsinline', '');\r\n\tdomElement.style.width = this.parameters.displayWidth+'px'\r\n\tdomElement.style.height = this.parameters.displayHeight+'px'\r\n\r\n\t// get available devices\r\n\tnavigator.mediaDevices.enumerateDevices().then(function(devices) {\r\n\t\tvar userMediaConstraints = {\r\n\t\t\taudio: false,\r\n\t\t\tvideo: {\r\n\t\t\t\tfacingMode: 'environment',\r\n\t\t\t\twidth: {\r\n\t\t\t\t\t// ideal: _this.parameters.sourceWidth,\r\n\t\t\t\t\tmin: 640,\r\n\t\t\t\t\tmax: 1920\r\n\t\t\t\t},\r\n\t\t\t\theight: {\r\n\t\t\t\t\t// ideal: _this.parameters.sourceHeight,\r\n\t\t\t\t\tmin: 480,\r\n\t\t\t\t\tmax: 1080\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// get a device which satisfy the constraints\r\n\t\tnavigator.mediaDevices.getUserMedia(userMediaConstraints).then(function success(stream) {\r\n\t\t\t// set the .src of the domElement\r\n\t\t\tdomElement.srcObject = stream;\r\n\t\t\tdocument.body.addEventListener('click', () => domElement.play())\r\n\r\n\t\t\tvar interval = setInterval(() => {\r\n\t\t\t\tif (domElement.videoWidth) {\r\n\t\t\t\t\tonReady()\r\n\t\t\t\t\tclearInterval(interval);\r\n\t\t\t\t}\r\n\t\t\t}, 20);\r\n\t\t}).catch(function(error) {\r\n\t\t\tonError({\r\n\t\t\t\tname: error.name,\r\n\t\t\t\tmessage: error.message\r\n\t\t\t});\r\n\t\t});\r\n\t}).catch(function(error) {\r\n\t\tonError({\r\n\t\t\tmessage: error.message\r\n\t\t});\r\n\t});\r\n\r\n\treturn domElement\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n//          handle resize\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\nTHREEx.ArToolkitSource.prototype.onResizeElement = function(){\r\n\tvar screenWidth = window.innerWidth;\r\n\tvar screenHeight = window.innerHeight;\r\n\tvar sourceWidth = this.domElement.videoWidth;\r\n\tvar sourceHeight = this.domElement.videoHeight;\r\n\t// compute sourceAspect\r\n\tvar sourceAspect = sourceWidth / sourceHeight;\r\n\t// compute screenAspect\r\n\tvar screenAspect = screenWidth / screenHeight;\r\n\r\n\t// if screenAspect < sourceAspect, then change the width, else change the height\r\n\tif(screenAspect < sourceAspect) {\r\n\t\t// compute newWidth and set .width/.marginLeft\r\n\t\tvar newWidth = sourceAspect * screenHeight\r\n\t\tthis.domElement.style.width = newWidth+'px'\r\n\t\tthis.domElement.style.marginLeft = -(newWidth-screenWidth)/2+'px'\r\n\t\t\r\n\t\t// init style.height/.marginTop to normal value\r\n\t\tthis.domElement.style.height = screenHeight+'px'\r\n\t\tthis.domElement.style.marginTop = '0px'\r\n\t}else{\r\n\t\t// compute newHeight and set .height/.marginTop\r\n\t\tvar newHeight = 1 / (sourceAspect / screenWidth)\r\n\t\tthis.domElement.style.height = newHeight+'px'\r\n\t\tthis.domElement.style.marginTop = -(newHeight-screenHeight)/2+'px'\r\n\t\t\r\n\t\t// init style.width/.marginLeft to normal value\r\n\t\tthis.domElement.style.width = screenWidth+'px'\r\n\t\tthis.domElement.style.marginLeft = '0px'\r\n\t}\r\n}\r\n\r\nTHREEx.ArToolkitSource.prototype.copyElementSizeTo = function(otherElement){\r\n\totherElement.style.width = this.domElement.style.width\r\n\totherElement.style.height = this.domElement.style.height\r\n\totherElement.style.marginLeft = this.domElement.style.marginLeft\r\n\totherElement.style.marginTop = this.domElement.style.marginTop\r\n}\r\n","import { EventDispatcher, Matrix4 } from 'three';\n\nwindow.THREEx = window.THREEx || {};\n\nconst { THREEx, artoolkit, ARController, ARCameraParam } = window;\n\nTHREEx.ArToolkitContext = function(parameters){\n\tthis.arController = null;\n\tthis.arucoContext = null;\n\tthis.initialized = false;\n\tthis._updatedAt = null;\n\tthis._arMarkersControls = [];\n\n\t// handle default parameters\n\tthis.parameters = {\n\t\tdetectionMode: 'mono',\n\t\tmatrixCodeType: '3x3',\n\t\tcameraParametersUrl: 'parameters/camera_para.dat',\n\t\tmaxDetectionRate: 60,\n\t\tcanvasWidth: 640,\n\t\tcanvasHeight: 480,\n\t\tpatternRatio: 0.5,\n\t\timageSmoothingEnabled : false,\n\t\t...parameters\n\t}\n\tconsole.assert(['color', 'color_and_matrix', 'mono', 'mono_and_matrix'].indexOf(this.parameters.detectionMode) !== -1, 'invalid parameter detectionMode', this.parameters.detectionMode)\n}\n\nObject.assign(THREEx.ArToolkitContext.prototype, EventDispatcher.prototype);\n\n//////////////////////////////////////////////////////////////////////////////\n//\t\tinit functions\n//////////////////////////////////////////////////////////////////////////////\n\nTHREEx.ArToolkitContext.prototype.init = function(onCompleted){\n\tvar _this = this;\n\tthis._initArtoolkit(done);\n\n\tfunction done(){\n\t\t// dispatch event\n\t\t_this.dispatchEvent({\n\t\t\ttype: 'initialized'\n\t\t});\n\n\t\t_this.initialized = true\n\n\t\tonCompleted && onCompleted()\n\t}\n\n}\n////////////////////////////////////////////////////////////////////////////////\n//          update function\n////////////////////////////////////////////////////////////////////////////////\nTHREEx.ArToolkitContext.prototype.update = function(srcElement){\n\n\t// be sure arController is fully initialized\n        if(this.arController === null) return false;\n\n\t// honor this.parameters.maxDetectionRate\n\tvar present = performance.now()\n\tif( this._updatedAt !== null && present - this._updatedAt < 1000/this.parameters.maxDetectionRate ){\n\t\treturn false\n\t}\n\tthis._updatedAt = present\n\n\t// mark all markers to invisible before processing this frame\n\tthis._arMarkersControls.forEach(function(markerControls){\n\t\tmarkerControls.object3d.visible = false\n\t})\n\n\t// process this frame\n\tthis._updateArtoolkit(srcElement);\n\n\t// dispatch event\n\tthis.dispatchEvent({\n\t\ttype: 'sourceProcessed'\n\t});\n\n\n\t// return true as we processed the frame\n\treturn true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//          Add/Remove markerControls\n////////////////////////////////////////////////////////////////////////////////\nTHREEx.ArToolkitContext.prototype.addMarker = function(arMarkerControls){\n\tconsole.assert(arMarkerControls instanceof THREEx.ArMarkerControls)\n\tthis._arMarkersControls.push(arMarkerControls)\n}\n\nTHREEx.ArToolkitContext.prototype.removeMarker = function(arMarkerControls){\n\tconsole.assert(arMarkerControls instanceof THREEx.ArMarkerControls);\n\tconst index = this._arMarkersControls.findIndex(marker => marker.id === arMarkerControls.id);\n\tthis._arMarkersControls.splice(index, 1);\n}\n\n//////////////////////////////////////////////////////////////////////////////\n//\t\tartoolkit specific\n//////////////////////////////////////////////////////////////////////////////\nTHREEx.ArToolkitContext.prototype._initArtoolkit = function(onCompleted){\n        var _this = this\n\n\t// set this._artoolkitProjectionAxisTransformMatrix to change artoolkit projection matrix axis to match usual webgl one\n\tthis._artoolkitProjectionAxisTransformMatrix = new Matrix4()\n\tthis._artoolkitProjectionAxisTransformMatrix.multiply(new Matrix4().makeRotationY(Math.PI))\n\tthis._artoolkitProjectionAxisTransformMatrix.multiply(new Matrix4().makeRotationZ(Math.PI))\n\n\t// get cameraParameters\n        var cameraParameters = new ARCameraParam(_this.parameters.cameraParametersUrl, function(){\n        \t// init controller\n                var arController = new ARController(_this.parameters.canvasWidth, _this.parameters.canvasHeight, cameraParameters);\n\t\t\t\t\t\t\t\t_this.arController = arController\n\n\t\tarController.ctx.mozImageSmoothingEnabled = _this.parameters.imageSmoothingEnabled;\n\t\tarController.ctx.webkitImageSmoothingEnabled = _this.parameters.imageSmoothingEnabled;\n\t\tarController.ctx.msImageSmoothingEnabled = _this.parameters.imageSmoothingEnabled;\n\t\tarController.ctx.imageSmoothingEnabled = _this.parameters.imageSmoothingEnabled;\n\n\t\tvar detectionModes = {\n\t\t\t'color'\t\t\t: artoolkit.AR_TEMPLATE_MATCHING_COLOR,\n\t\t\t'color_and_matrix'\t: artoolkit.AR_TEMPLATE_MATCHING_COLOR_AND_MATRIX,\n\t\t\t'mono'\t\t\t: artoolkit.AR_TEMPLATE_MATCHING_MONO,\n\t\t\t'mono_and_matrix'\t: artoolkit.AR_TEMPLATE_MATCHING_MONO_AND_MATRIX,\n\t\t}\n\t\tvar detectionMode = detectionModes[_this.parameters.detectionMode]\n\t\tconsole.assert(detectionMode !== undefined)\n\t\tarController.setPatternDetectionMode(detectionMode);\n\n\t\tvar matrixCodeTypes = {\n\t\t\t'3x3'\t\t: artoolkit.AR_MATRIX_CODE_3x3,\n\t\t\t'3x3_HAMMING63'\t: artoolkit.AR_MATRIX_CODE_3x3_HAMMING63,\n\t\t\t'3x3_PARITY65'\t: artoolkit.AR_MATRIX_CODE_3x3_PARITY65,\n\t\t\t'4x4'\t\t: artoolkit.AR_MATRIX_CODE_4x4,\n\t\t\t'4x4_BCH_13_9_3': artoolkit.AR_MATRIX_CODE_4x4_BCH_13_9_3,\n\t\t\t'4x4_BCH_13_5_5': artoolkit.AR_MATRIX_CODE_4x4_BCH_13_5_5,\n\t\t}\n\t\tvar matrixCodeType = matrixCodeTypes[_this.parameters.matrixCodeType]\n\t\tconsole.assert(matrixCodeType !== undefined)\n\t\tarController.setMatrixCodeType(matrixCodeType);\n\t\tarController.setPattRatio(_this.parameters.patternRatio);\n\t\tonCompleted()\n\t})\n\treturn this\n}\n\n/**\n * return the projection matrix\n */\nTHREEx.ArToolkitContext.prototype.getProjectionMatrix = function(srcElement){\n\n\n// FIXME rename this function to say it is artoolkit specific - getArtoolkitProjectMatrix\n// keep a backward compatibility with a console.warn\n\n\tconsole.assert(this.arController, 'arController MUST be initialized to call this function')\n\t// get projectionMatrixArr from artoolkit\n\tvar projectionMatrixArr = this.arController.getCameraMatrix();\n\tvar projectionMatrix = new Matrix4().fromArray(projectionMatrixArr)\n\n\t// apply context._axisTransformMatrix - change artoolkit axis to match usual webgl one\n\tprojectionMatrix.multiply(this._artoolkitProjectionAxisTransformMatrix)\n\n\t// return the result\n\treturn projectionMatrix\n}\n\nTHREEx.ArToolkitContext.prototype._updateArtoolkit = function(srcElement){\n\tthis.arController.process(srcElement)\n}\n","import { EventDispatcher } from 'three';\n\nwindow.THREEx = window.THREEx || {};\n\nconst { THREEx } = window;\n\nTHREEx.ArBaseControls = function(object3d){\n\tthis.id = THREEx.ArBaseControls.id++\n\n\tthis.object3d = object3d\n\tthis.object3d.matrixAutoUpdate = false;\n\tthis.object3d.visible = false\n\n\t// Events to honor\n\t// this.dispatchEvent({ type: 'becameVisible' })\n\t// this.dispatchEvent({ type: 'markerVisible' })\t// replace markerFound\n\t// this.dispatchEvent({ type: 'becameUnVisible' })\n}\n\nTHREEx.ArBaseControls.id = 0\n\nObject.assign(THREEx.ArBaseControls.prototype, EventDispatcher.prototype);\n\n//////////////////////////////////////////////////////////////////////////////\n//\t\tFunctions\n//////////////////////////////////////////////////////////////////////////////\n/**\n * error catching function for update()\n */\nTHREEx.ArBaseControls.prototype.update = function(){\n\tconsole.assert(false, 'you need to implement your own update')\n}\n\n/**\n * error catching function for name()\n */\nTHREEx.ArBaseControls.prototype.name = function(){\n\tconsole.assert(false, 'you need to implement your own .name()')\n\treturn 'Not yet implemented - name()'\n}\n","import { Matrix4 } from 'three';\r\n\r\n// import ArBaseControls from 'scripts/threex-arbasecontrols';\r\n\r\nwindow.THREEx = window.THREEx || {};\r\n\r\nconst { artoolkit, THREEx } = window;\r\n\r\n\r\nTHREEx.ArMarkerControls = function (context, object3d, parameters) {\r\n  var _this = this\r\n\r\n  THREEx.ArBaseControls.call(this, object3d)\r\n\r\n  this.context = context\r\n  // handle default parameters\r\n  this.parameters = {\r\n    // size of the marker in meter\r\n    size : 1,\r\n    // type of marker - ['pattern', 'barcode', 'unknown' ]\r\n    type : 'unknown',\r\n    // url of the pattern - IIF type='pattern'\r\n    patternUrl : null,\r\n    // value of the barcode - IIF type='barcode'\r\n    barcodeValue : null,\r\n    // change matrix mode - [modelViewMatrix, cameraTransformMatrix]\r\n    changeMatrixMode : 'modelViewMatrix',\r\n    // minimal confidence in the marke recognition - between [0, 1] - default to 1\r\n    minConfidence: 0.6,\r\n  }\r\n\r\n  // sanity check\r\n  var possibleTypeValues = ['pattern', 'barcode', 'unknown']\r\n  console.assert(possibleTypeValues.indexOf(this.parameters.type) !== -1, 'illegal value', this.parameters.type)\r\n  var possibleMatrixModeValues = ['modelViewMatrix', 'cameraTransformMatrix' ]\r\n  console.assert(possibleMatrixModeValues.indexOf(this.parameters.changeMatrixMode) !== -1, 'illegal value', this.parameters.changeMatrixMode)\r\n\r\n\r\n        // create the marker Root\r\n  this.object3d = object3d\r\n  this.object3d.matrixAutoUpdate = false;\r\n  this.object3d.visible = false;\r\n\r\n  //////////////////////////////////////////////////////////////////////////////\r\n  //    setParameters\r\n  //////////////////////////////////////////////////////////////////////////////\r\n  setParameters(parameters)\r\n  function setParameters(parameters){\r\n    if( parameters === undefined )  return\r\n    for( var key in parameters ){\r\n      var newValue = parameters[ key ]\r\n\r\n      if( newValue === undefined ){\r\n        console.warn( \"THREEx.ArMarkerControls: '\" + key + \"' parameter is undefined.\" )\r\n        continue\r\n      }\r\n\r\n      var currentValue = _this.parameters[ key ]\r\n\r\n      if( currentValue === undefined ){\r\n        console.warn( \"THREEx.ArMarkerControls: '\" + key + \"' is not a property of this material.\" )\r\n        continue\r\n      }\r\n\r\n      _this.parameters[ key ] = newValue\r\n    }\r\n  }\r\n\r\n  //////////////////////////////////////////////////////////////////////////////\r\n  //    Code Separator\r\n  //////////////////////////////////////////////////////////////////////////////\r\n  // add this marker to artoolkitsystem\r\n  // TODO rename that .addMarkerControls\r\n  context.addMarker(this);\r\n\r\n  this._initArtoolkit();\r\n}\r\n\r\nTHREEx.ArMarkerControls.prototype = Object.create( THREEx.ArBaseControls.prototype );\r\n\r\n\r\nTHREEx.ArMarkerControls.prototype.dispose = function(){\r\n  this.context.removeMarker(this)\r\n\r\n  // TODO remove the event listener if needed\r\n  // unloadMaker ???\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n//    update controls with new modelViewMatrix\r\n//////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * When you actually got a new modelViewMatrix, you need to perfom a whole bunch\r\n * of things. it is done here.\r\n */\r\nTHREEx.ArMarkerControls.prototype.updateWithModelViewMatrix = function(modelViewMatrix){\r\n  var markerObject3D = this.object3d;\r\n\r\n  // mark object as visible\r\n  markerObject3D.visible = true\r\n\r\n  var tmpMatrix = new Matrix4().copy(this.context._artoolkitProjectionAxisTransformMatrix);\r\n  var markerAxisTransformMatrix = new Matrix4().makeRotationX(Math.PI/2);\r\n  tmpMatrix.multiply(modelViewMatrix)\r\n  tmpMatrix.multiply(markerAxisTransformMatrix)\r\n  modelViewMatrix.copy(tmpMatrix)\r\n\r\n  // change markerObject3D.matrix based on parameters.changeMatrixMode\r\n  if( this.parameters.changeMatrixMode === 'modelViewMatrix' ){\r\n    markerObject3D.matrix.copy(modelViewMatrix)\r\n  }else if( this.parameters.changeMatrixMode === 'cameraTransformMatrix' ){\r\n    markerObject3D.matrix.getInverse(modelViewMatrix)\r\n  }else {\r\n    console.assert(false)\r\n  }\r\n\r\n  // decompose - the matrix into .position, .quaternion, .scale\r\n  markerObject3D.matrix.decompose(markerObject3D.position, markerObject3D.quaternion, markerObject3D.scale)\r\n\r\n  // dispatchEvent\r\n  this.dispatchEvent({\r\n    type: 'markerPositionUpdated',\r\n    data: markerObject3D.matrix.toArray()\r\n  });\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n//    utility functions\r\n//////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * provide a name for a marker\r\n * - silly heuristic for now\r\n * - should be improved\r\n */\r\nTHREEx.ArMarkerControls.prototype.name = function(){\r\n  var name = ''\r\n  name += this.parameters.type;\r\n  if( this.parameters.type === 'pattern' ){\r\n    var url = this.parameters.patternUrl\r\n    var basename = url.replace(/^.*\\//g, '')\r\n    name += ' - ' + basename\r\n  }else if( this.parameters.type === 'barcode' ){\r\n    name += ' - ' + this.parameters.barcodeValue\r\n  }else{\r\n    console.assert(false, 'no .name() implemented for this marker controls')\r\n  }\r\n  return name\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n//    init for Artoolkit\r\n//////////////////////////////////////////////////////////////////////////////\r\nTHREEx.ArMarkerControls.prototype._initArtoolkit = function(){\r\n  var _this = this\r\n\r\n  var artoolkitMarkerId = null\r\n\r\n  var delayedInitTimerId = setInterval(function(){\r\n    // check if arController is init\r\n    console.log(_this.context.arController);\r\n    var arController = _this.context.arController\r\n    if( arController === null )  return\r\n    // stop looping if it is init\r\n    clearInterval(delayedInitTimerId)\r\n    delayedInitTimerId = null\r\n    // launch the _postInitArtoolkit\r\n    postInit()\r\n  }, 1000/50)\r\n\r\n  return\r\n\r\n  function postInit(){\r\n    // check if arController is init\r\n    var arController = _this.context.arController\r\n    console.assert(arController !== null )\r\n\r\n    // start tracking this pattern\r\n    if( _this.parameters.type === 'pattern' ){\r\n                  arController.loadMarker(_this.parameters.patternUrl, function(markerId) {\r\n        artoolkitMarkerId = markerId\r\n                          arController.trackPatternMarkerId(artoolkitMarkerId, _this.parameters.size);\r\n                  });\r\n    }else if( _this.parameters.type === 'barcode' ){\r\n      artoolkitMarkerId = _this.parameters.barcodeValue\r\n      arController.trackBarcodeMarkerId(artoolkitMarkerId, _this.parameters.size);\r\n    }else if( _this.parameters.type === 'unknown' ){\r\n      artoolkitMarkerId = null\r\n    }else{\r\n      console.log(false, 'invalid marker type', _this.parameters.type)\r\n    }\r\n\r\n    // listen to the event\r\n    arController.addEventListener('getMarker', function(event){\r\n      if( event.data.type === artoolkit.PATTERN_MARKER && _this.parameters.type === 'pattern' ){\r\n        if( artoolkitMarkerId === null )  return\r\n        if( event.data.marker.idPatt === artoolkitMarkerId ) onMarkerFound(event)\r\n      }else if( event.data.type === artoolkit.BARCODE_MARKER && _this.parameters.type === 'barcode' ){\r\n        // console.log('BARCODE_MARKER idMatrix', event.data.marker.idMatrix, artoolkitMarkerId )\r\n        if( artoolkitMarkerId === null )  return\r\n        if( event.data.marker.idMatrix === artoolkitMarkerId )  onMarkerFound(event)\r\n      }else if( event.data.type === artoolkit.UNKNOWN_MARKER && _this.parameters.type === 'unknown'){\r\n        onMarkerFound(event)\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  function onMarkerFound(event){\r\n    // honor his.parameters.minConfidence\r\n    if( event.data.type === artoolkit.PATTERN_MARKER && event.data.marker.cfPatt < _this.parameters.minConfidence )  return\r\n    if( event.data.type === artoolkit.BARCODE_MARKER && event.data.marker.cfMatt < _this.parameters.minConfidence )  return\r\n\r\n    var modelViewMatrix = new Matrix4().fromArray(event.data.matrix)\r\n    _this.updateWithModelViewMatrix(modelViewMatrix)\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/App';\n\nimport 'scripts/threex-artoolkitsource';\nimport 'scripts/threex-artoolkitcontext';\nimport 'scripts/threex-arbasecontrols';\nimport 'scripts/threex-armarkercontrols';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}