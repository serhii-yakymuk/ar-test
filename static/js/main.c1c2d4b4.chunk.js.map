{"version":3,"sources":["components/AR/armarkercontrols.js","components/AR/artoolkitcontext.js","components/SoundWave/SoundWave.js","components/SoundIcon/SoundIcon.js","hooks/useWindowSize.js","hooks/useSourceStyles.js","components/WebcamSource/WebcamSource.js","components/AR/AR.js","components/App/App.js","serviceWorker.js","index.js"],"names":["artoolkit","window","currentId","ArMarkerControls","context","object3d","parameters","this","id","matrixAutoUpdate","visible","size","type","patternUrl","barcodeValue","changeMatrixMode","minConfidence","addMarker","_initArtoolkit","Object","assign","prototype","EventDispatcher","dispose","removeMarker","updateWithModelViewMatrix","modelViewMatrix","markerObject3D","tmpMatrix","Matrix4","copy","_artoolkitProjectionAxisTransformMatrix","markerAxisTransformMatrix","makeRotationX","Math","PI","multiply","matrix","getInverse","decompose","position","quaternion","scale","dispatchEvent","data","toArray","name","replace","arController","artoolkitMarkerId","loadMarker","markerId","trackPatternMarkerId","trackBarcodeMarkerId","addEventListener","event","eventType","marker","PATTERN_MARKER","idPatt","cfPatt","BARCODE_MARKER","idMatrix","cfMatt","fromArray","ARController","ARCameraParam","DETECTION_MODES","AR_TEMPLATE_MATCHING_COLOR","AR_TEMPLATE_MATCHING_COLOR_AND_MATRIX","AR_TEMPLATE_MATCHING_MONO","AR_TEMPLATE_MATCHING_MONO_AND_MATRIX","MATRIX_CODE_TYPES","AR_MATRIX_CODE_3x3","AR_MATRIX_CODE_3x3_HAMMING63","AR_MATRIX_CODE_3x3_PARITY65","AR_MATRIX_CODE_4x4","AR_MATRIX_CODE_4x4_BCH_13_9_3","AR_MATRIX_CODE_4x4_BCH_13_5_5","ArToolkitContext","_updatedAt","_arMarkersControls","makeRotationY","makeRotationZ","detectionMode","matrixCodeType","cameraParametersUrl","maxDetectionRate","canvasWidth","canvasHeight","patternRatio","imageSmoothingEnabled","update","srcElement","present","performance","now","forEach","markerControls","process","arMarkerControls","push","index","findIndex","splice","init","onCompleted","cameraParameters","ctx","mozImageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","setPatternDetectionMode","setMatrixCodeType","setPattRatio","getProjectionMatrix","projectionMatrixArr","getCameraMatrix","projectionMatrix","SoundWave","width","height","style","fillColor","isActive","className","aria-hidden","viewBox","xmlns","classnames","fill","x","rx","defaultProps","SoundIcon","strokeColor","isMute","transform","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","x1","y1","x2","y2","useWindowSize","getSize","innerWidth","innerHeight","useState","windowSize","setWindowSize","useEffect","handleResize","debounce","removeEventListener","useSourceStyles","isReady","videoRef","screenAspect","videoStyles","display","marginTop","marginLeft","current","sourceAspect","videoWidth","videoHeight","newWidth","newHeight","canvasStyles","top","left","WebcamSource","props","sourceWidth","sourceHeight","canvasRef","videoSourceRef","useRef","setIsReady","isMounted","clickHandler","play","navigator","mediaDevices","getUserMedia","audio","video","facingMode","min","max","then","stream","srcObject","document","body","readyInterval","setInterval","clearInterval","catch","err","console","log","getTracks","track","stop","createPortal","muted","autoPlay","playsInline","ref","node","getElementById","AR","initialScale","modelUrl","audioUrl","audioRef","modelRef","sceneRef","mixerRef","hammerRef","markerRootRef","mixerActionRef","pinchStartScale","panStartRotation","eventRotation","modelRotation","setIsMute","isModelLoaded","setIsModelLoaded","isMarkerFound","setIsMarkerFound","isAnimationFinished","setIsAnimationFinished","pause","MIN_SCALE","MAX_SCALE","Hammer","get","set","enable","on","e","scene","boundedScale","rotation","y","deltaRotation","destroy","deltaTime","isMarkerVisible","clock","Clock","camera","Camera","renderer","WebGLRenderer","canvas","antialias","alpha","arToolkitContext","Group","Scene","add","setClearColor","Color","setPixelRatio","devicePixelRatio","animate","requestAnimationFrame","getDelta","paused","render","GLTFLoader","load","gltf","modelScene","light1","AmbientLight","light2","PointLight","light3","animations","clip","AnimationMixer","clipAction","loop","LoopOnce","clampWhenFinished","children","preload","src","onClick","volume","reset","App","isArEnabled","setArEnabled","prevIsArEnabled","Boolean","location","hostname","match","ReactDOM","StrictMode","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c1c2d4b4.chunk.js","sourcesContent":["import { Matrix4, EventDispatcher } from 'three';\r\n\r\nconst { artoolkit } = window;\r\n\r\nlet currentId = 0;\r\n\r\nfunction ArMarkerControls (context, object3d, parameters) {\r\n  this.id = currentId++;\r\n  this.context = context;\r\n  this.object3d = object3d;\r\n  this.object3d.matrixAutoUpdate = false;\r\n  this.object3d.visible = false;\r\n\r\n  this.parameters = {\r\n    size : 1,\r\n    type : 'unknown',\r\n    patternUrl : null,\r\n    barcodeValue : null,\r\n    changeMatrixMode : 'modelViewMatrix',\r\n    minConfidence: 0.6,\r\n    ...parameters\r\n  }\r\n\r\n  context.addMarker(this);\r\n\r\n  this._initArtoolkit();\r\n};\r\n\r\nObject.assign(ArMarkerControls.prototype, EventDispatcher.prototype);\r\n\r\nArMarkerControls.prototype.dispose = function() {\r\n  this.context.removeMarker(this)\r\n}\r\n\r\nArMarkerControls.prototype.updateWithModelViewMatrix = function(modelViewMatrix) {\r\n  const markerObject3D = this.object3d;\r\n\r\n  markerObject3D.visible = true;\r\n\r\n  const tmpMatrix = new Matrix4().copy(this.context._artoolkitProjectionAxisTransformMatrix);\r\n  const markerAxisTransformMatrix = new Matrix4().makeRotationX(Math.PI/2);\r\n\r\n  tmpMatrix.multiply(modelViewMatrix);\r\n  tmpMatrix.multiply(markerAxisTransformMatrix);\r\n  modelViewMatrix.copy(tmpMatrix);\r\n\r\n  if (this.parameters.changeMatrixMode === 'modelViewMatrix') {\r\n    markerObject3D.matrix.copy(modelViewMatrix);\r\n  } else if (this.parameters.changeMatrixMode === 'cameraTransformMatrix') {\r\n    markerObject3D.matrix.getInverse(modelViewMatrix);\r\n  }\r\n\r\n  markerObject3D.matrix.decompose(markerObject3D.position, markerObject3D.quaternion, markerObject3D.scale);\r\n\r\n  this.dispatchEvent({\r\n    type: 'markerPositionUpdated',\r\n    data: markerObject3D.matrix.toArray()\r\n  });\r\n};\r\n\r\nArMarkerControls.prototype.name = function() {\r\n  const { type, patternUrl, barcodeValue } = this.parameters;\r\n\r\n  if (type === 'pattern') {\r\n    return `${type}-${patternUrl.replace(/^.*\\//g, '')}`;\r\n  } else if (type === 'barcode') {\r\n    return `${type}-${barcodeValue}`;\r\n  } else {\r\n    return type;\r\n  }\r\n};\r\n\r\nArMarkerControls.prototype._initArtoolkit = function() {\r\n  const { size, type, patternUrl, barcodeValue, minConfidence } = this.parameters;\r\n  const arController = this.context.arController;\r\n  let artoolkitMarkerId = null;\r\n\r\n  if (type === 'pattern') {\r\n    arController.loadMarker(patternUrl, markerId => {\r\n      artoolkitMarkerId = markerId;\r\n      arController.trackPatternMarkerId(artoolkitMarkerId, size);\r\n    });\r\n  } else if (type === 'barcode') {\r\n    artoolkitMarkerId = barcodeValue;\r\n    arController.trackBarcodeMarkerId(artoolkitMarkerId, size);\r\n  }\r\n\r\n  arController.addEventListener('getMarker', event => {\r\n    const { type: eventType, marker, matrix } = event.data;\r\n\r\n    if (\r\n      (eventType === artoolkit.PATTERN_MARKER && type === 'pattern' && marker.idPatt === artoolkitMarkerId && marker.cfPatt > minConfidence) ||\r\n      (eventType === artoolkit.BARCODE_MARKER && type === 'barcode' && marker.idMatrix === artoolkitMarkerId && marker.cfMatt < minConfidence)\r\n    ) {\r\n      this.updateWithModelViewMatrix(new Matrix4().fromArray(matrix));\r\n    }\r\n  });\r\n};\r\n\r\nexport default ArMarkerControls;\r\n","import { EventDispatcher, Matrix4 } from 'three';\n\nconst { artoolkit, ARController, ARCameraParam } = window;\n\nconst DETECTION_MODES = {\n  'color': artoolkit.AR_TEMPLATE_MATCHING_COLOR,\n  'color_and_matrix': artoolkit.AR_TEMPLATE_MATCHING_COLOR_AND_MATRIX,\n  'mono': artoolkit.AR_TEMPLATE_MATCHING_MONO,\n  'mono_and_matrix': artoolkit.AR_TEMPLATE_MATCHING_MONO_AND_MATRIX\n};\n\nconst MATRIX_CODE_TYPES = {\n  '3x3': artoolkit.AR_MATRIX_CODE_3x3,\n  '3x3_HAMMING63': artoolkit.AR_MATRIX_CODE_3x3_HAMMING63,\n  '3x3_PARITY65': artoolkit.AR_MATRIX_CODE_3x3_PARITY65,\n  '4x4': artoolkit.AR_MATRIX_CODE_4x4,\n  '4x4_BCH_13_9_3': artoolkit.AR_MATRIX_CODE_4x4_BCH_13_9_3,\n  '4x4_BCH_13_5_5': artoolkit.AR_MATRIX_CODE_4x4_BCH_13_5_5\n};\n\nfunction ArToolkitContext (parameters) {\n  this._updatedAt = null;\n  this.arController = null;\n  this._arMarkersControls = [];\n  this._artoolkitProjectionAxisTransformMatrix = new Matrix4();\n  this._artoolkitProjectionAxisTransformMatrix.multiply(new Matrix4().makeRotationY(Math.PI));\n  this._artoolkitProjectionAxisTransformMatrix.multiply(new Matrix4().makeRotationZ(Math.PI));\n\n  this.parameters = {\n    detectionMode: 'mono',\n    matrixCodeType: '3x3',\n    cameraParametersUrl: 'parameters/camera_para.dat',\n    maxDetectionRate: 60,\n    canvasWidth: 640,\n    canvasHeight: 480,\n    patternRatio: 0.5,\n    imageSmoothingEnabled: false,\n    ...parameters\n  };\n}\n\nObject.assign(ArToolkitContext.prototype, EventDispatcher.prototype);\n\nArToolkitContext.prototype.update = function(srcElement) {\n  if (this.arController === null) {\n    return false;\n  };\n\n  const present = performance.now();\n\n  if (this._updatedAt !== null && present - this._updatedAt < 1000 / this.parameters.maxDetectionRate) {\n    return false;\n  }\n\n  this._updatedAt = present;\n\n  this._arMarkersControls.forEach(markerControls => {\n    markerControls.object3d.visible = false;\n  });\n\n  this.arController.process(srcElement);\n\n  return true;\n};\n\nArToolkitContext.prototype.addMarker = function(arMarkerControls) {\n  this._arMarkersControls.push(arMarkerControls);\n};\n\nArToolkitContext.prototype.removeMarker = function(arMarkerControls) {\n  const index = this._arMarkersControls.findIndex(marker => marker.id === arMarkerControls.id);\n  this._arMarkersControls.splice(index, 1);\n};\n\nArToolkitContext.prototype.init = function(onCompleted = () => {}) {\n  const { cameraParametersUrl, canvasWidth, canvasHeight, imageSmoothingEnabled, detectionMode, matrixCodeType, patternRatio } = this.parameters;\n\n  const cameraParameters = new ARCameraParam(cameraParametersUrl, () => {\n    const arController = new ARController(canvasWidth, canvasHeight, cameraParameters);\n\n    this.arController = arController;\n    arController.ctx.mozImageSmoothingEnabled = imageSmoothingEnabled;\n    arController.ctx.webkitImageSmoothingEnabled = imageSmoothingEnabled;\n    arController.ctx.msImageSmoothingEnabled = imageSmoothingEnabled;\n    arController.ctx.imageSmoothingEnabled = imageSmoothingEnabled;\n\n    arController.setPatternDetectionMode(DETECTION_MODES[detectionMode]);\n    arController.setMatrixCodeType(MATRIX_CODE_TYPES[matrixCodeType]);\n    arController.setPattRatio(patternRatio);\n\n    onCompleted();\n  })\n  return this\n};\n\n/**\n * return the projection matrix\n */\nArToolkitContext.prototype.getProjectionMatrix = function() {\n  var projectionMatrixArr = this.arController.getCameraMatrix();\n  var projectionMatrix = new Matrix4().fromArray(projectionMatrixArr);\n\n  projectionMatrix.multiply(this._artoolkitProjectionAxisTransformMatrix);\n\n  return projectionMatrix;\n};\n\nexport default ArToolkitContext;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport './SoundWave.css';\n\nconst SoundWave = ({ width, height, style, fillColor, isActive, className }) => (\n  <svg\n    style={style}\n    width={width}\n    height={height}\n    aria-hidden='true'\n    viewBox='0 0 48 48'\n    xmlns='http://www.w3.org/2000/svg'\n    className={classnames(className, isActive && 'sound-wave--active')}\n  >\n    <g fill={fillColor}>\n      <rect className='sound-wave-bar sound-wave-bar-1' x='4.9' rx='1.5' />\n      <rect className='sound-wave-bar sound-wave-bar-2' x='13.5' rx='1.5' />\n      <rect className='sound-wave-bar sound-wave-bar-3' x='22.1' rx='1.5' />\n      <rect className='sound-wave-bar sound-wave-bar-2' x='30.7' rx='1.5' />\n      <rect className='sound-wave-bar sound-wave-bar-1' x='39.5' rx='1.5' />\n    </g>\n  </svg>\n);\n\nSoundWave.defaultProps = {\n  width               : '24',\n  height              : '24',\n  fillColor           : '#fff'\n};\n\nSoundWave.propTypes = {\n  style               : PropTypes.object,\n  width               : PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height              : PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  className           : PropTypes.string,\n  fillColor           : PropTypes.string\n};\n\nexport default SoundWave;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SoundIcon = ({ width, height, style, strokeColor, isMute }) => (\n  <svg\n    style={style}\n    width={width}\n    height={height}\n    aria-hidden='true'\n    viewBox='0 0 24 24'\n    xmlns='http://www.w3.org/2000/svg'\n  >\n    <g transform='translate(1, 3)' stroke={strokeColor} strokeWidth='1.5' fill='none' strokeLinecap='round' strokeLinejoin='round'>\n        <path d='M5.57,6.06 L1.25,6.06 C0.84,6.06 0.5,6.4 0.5,6.8 L0.5,11.36 C0.5,11.78 0.84,12.12 1.25,12.12 L5.57,12.12 C6.7,15.03 9.34,17.06 12.43,17.38 C12.64,17.4 12.85,17.33 13,17.18 C13.16,17.04 13.25,16.84 13.25,16.62 L13.25,1.55 C13.25,1.34 13.16,1.13 13,1 C12.85,0.85 12.64,0.78 12.43,0.8 C9.34,1.11 6.7,3.15 5.57,6.06 Z' />\n        {isMute ? (\n          <>\n            <line x1='21.32' y1='7' x2='17' y2='11.5' />\n            <line x1='17' y1='7' x2='21.32' y2='11.5' />\n          </>\n        ) : (\n          <>\n            <path d='M20.46,12.67 C21.85,10.49 21.85,7.69 20.46,5.5' />\n            <path d='M17.56,11.357 C18.6,10.06 18.6,8.2 17.56,6.9' />\n          </>\n        )}\n    </g>\n  </svg>\n);\n\nSoundIcon.defaultProps = {\n  width               : '24',\n  height              : '24',\n  strokeColor         : '#fff'\n};\n\nSoundIcon.propTypes = {\n  style               : PropTypes.object,\n  width               : PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height              : PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  className           : PropTypes.string,\n  fillColor           : PropTypes.string\n};\n\nexport default SoundIcon;\n","import { useState, useEffect } from 'react';\r\nimport debounce from 'lodash/debounce';\r\n\r\nconst useWindowSize = () => {\r\n  const getSize = () => ({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight\r\n  });\r\n\r\n  const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n  useEffect(() => {\r\n    const handleResize = debounce(() => {\r\n      setWindowSize(getSize());\r\n    }, 50);\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return windowSize;\r\n};\r\n\r\nexport default useWindowSize;","import useWindowSize from './useWindowSize';\r\n\r\nconst useSourceStyles = (isReady, videoRef) => {\r\n  const { width, height } = useWindowSize();\r\n  const screenAspect = width / height;\r\n\r\n  let videoStyles = {\r\n    display: 'none',\r\n    width,\r\n    height,\r\n    marginTop: 0,\r\n    marginLeft: 0\r\n  };\r\n\r\n  if (isReady) {\r\n    const { videoWidth, videoHeight } = videoRef.current;\r\n\r\n    const sourceWidth = videoWidth;\r\n    const sourceHeight = videoHeight;\r\n\r\n    const sourceAspect = sourceWidth / sourceHeight;\r\n\r\n    if (screenAspect < sourceAspect) {\r\n      const newWidth = sourceAspect * height;\r\n\r\n      videoStyles = {\r\n        height,\r\n        width: newWidth,\r\n        marginTop: 0,\r\n        marginLeft: -(newWidth - width) / 2\r\n      };\r\n    } else {\r\n      const newHeight = width / sourceAspect;\r\n\r\n      videoStyles = {\r\n        width,\r\n        height: newHeight,\r\n        marginTop: -(newHeight - height) / 2,\r\n        marginLeft: 0\r\n      };\r\n    }\r\n  }\r\n\r\n  let canvasStyles = {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    ...videoStyles,\r\n    ...(screenAspect < 1 ? {\r\n      width: videoStyles.height * 4 / 3,\r\n      marginLeft: (width - videoStyles.height * 4 / 3) / 2\r\n    } :  {})\r\n  }\r\n\r\n  return { videoStyles, canvasStyles };\r\n};\r\n\r\nexport default useSourceStyles;\r\n","import React, { useRef, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport useSourceStyles from 'hooks/useSourceStyles';\n\n\nconst WebcamSource = props => {\n  const { sourceWidth, sourceHeight, canvasRef, videoSourceRef } = props;\n  const videoRef = useRef();\n  const [isReady, setIsReady] = useState(false);\n  const { videoStyles, canvasStyles } = useSourceStyles(isReady, videoRef);\n\n  useEffect(() => {\n    let isMounted = true;\n    const clickHandler = () => {\n      videoRef.current.play();\n    };\n\n    const userMediaConstraints = {\n      audio: false,\n      video: {\n        facingMode: 'environment',\n        width: {\n          // ideal: sourceWidth,\n          min: 640,\n          max: 640\n        },\n        height: {\n          // ideal: sourceHeight,\n          min: 480,\n          max: 480\n        }\n      }\n    };\n\n    navigator.mediaDevices.getUserMedia(userMediaConstraints)\n      .then(stream => {\n        if (isMounted) {\n          videoRef.current.srcObject = stream;\n          document.body.addEventListener('click', clickHandler);\n\n          const readyInterval = setInterval(() => {\n            if (videoRef.current && videoRef.current.videoWidth) {\n              setIsReady(true);\n              clearInterval(readyInterval);\n            }\n          }, 20);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n    return () => {\n      isMounted = false;\n      document.body.removeEventListener('click', clickHandler);\n\n      if (videoRef.current.srcObject) {\n        videoRef.current.srcObject.getTracks()\n          .forEach(track => track.stop());\n      }\n    };\n  }, [sourceWidth, sourceHeight]);\n\n  return createPortal(\n    <>\n      <video\n        muted\n        autoPlay\n        playsInline\n        ref={node => {\n          videoRef.current = node;\n          videoSourceRef.current = node;\n        }}\n        style={videoStyles}\n      />\n      <canvas\n        ref={canvasRef}\n        width={sourceWidth}\n        height={sourceHeight}\n        style={canvasStyles}\n      />\n    </>\n  , document.getElementById('ar-container'));\n};\n\nWebcamSource.defaultProps = {\n  sourceWidth: 640,\n  sourceHeight: 480,\n  canvasRef: {},\n  videoSourceRef: {}\n};\n\nexport default WebcamSource;\n","import Hammer from 'hammerjs';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { Scene, Camera, WebGLRenderer, Group, Color, PointLight, AmbientLight, AnimationMixer, Clock, LoopOnce } from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\n\r\nimport ArMarkerControls from './armarkercontrols';\r\nimport ArToolkitContext from './artoolkitcontext';\r\n\r\nimport SoundWave from 'components/SoundWave';\r\nimport SoundIcon from 'components/SoundIcon';\r\nimport WebcamSource from 'components/WebcamSource';\r\n\r\nimport './AR.css';\r\n\r\nconst AR = props => {\r\n  const { initialScale, patternUrl, cameraParametersUrl, modelUrl, audioUrl } = props;\r\n  const audioRef = useRef();\r\n  const modelRef = useRef();\r\n  const sceneRef = useRef();\r\n  const mixerRef = useRef();\r\n  const hammerRef = useRef();\r\n  const canvasRef = useRef();\r\n  const markerRootRef = useRef();\r\n  const videoSourceRef = useRef();\r\n  const mixerActionRef = useRef();\r\n  const pinchStartScale = useRef();\r\n  const panStartRotation = useRef({ eventRotation: 0, modelRotation: 0 });\r\n  const [isMute, setIsMute] = useState(false);\r\n  const [isModelLoaded, setIsModelLoaded] = useState(false);\r\n  const [isMarkerFound, setIsMarkerFound] = useState(false);\r\n  const [isAnimationFinished, setIsAnimationFinished] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    if (isMarkerFound && isModelLoaded) {\r\n      audioRef.current.play();\r\n    } else {\r\n      audioRef.current.pause();\r\n    }\r\n  }, [isMarkerFound, isModelLoaded])\r\n\r\n  useEffect(() => {\r\n    const onPinchStart = e => {\r\n      if (modelRef.current) {\r\n        pinchStartScale.current = modelRef.current.scene.scale.x;\r\n      }\r\n    };\r\n\r\n    const onRotateStart = e => {\r\n      if (modelRef.current) {\r\n        panStartRotation.current = {\r\n          modelRotation: modelRef.current.scene.rotation.y,\r\n          eventRotation: e.rotation\r\n        };\r\n      }\r\n    };\r\n\r\n    const MIN_SCALE = initialScale / 3;\r\n    const MAX_SCALE = initialScale * 3;\r\n\r\n    hammerRef.current = new Hammer(document.getElementById('ar-container'));\r\n    hammerRef.current.get('pan').set({ enable: false });\r\n    hammerRef.current.get('pinch').set({ enable: true });\r\n    hammerRef.current.get('rotate').set({ enable: true });\r\n    hammerRef.current.on('pinchstart', onPinchStart);\r\n    hammerRef.current.on('pinch', e => {\r\n      if (pinchStartScale.current && modelRef.current) {\r\n        const scale = pinchStartScale.current * e.scale;\r\n        const boundedScale = Math.min(Math.max(scale, MIN_SCALE), MAX_SCALE);\r\n\r\n        modelRef.current.scene.scale.set(boundedScale, boundedScale, boundedScale);\r\n      }\r\n    });\r\n    hammerRef.current.on('rotatestart', onRotateStart);\r\n    hammerRef.current.on('rotate', e => {\r\n      if (modelRef.current) {\r\n        const deltaRotationAngle = e.rotation - panStartRotation.current.eventRotation;\r\n        const deltaRotation = deltaRotationAngle / 180 * Math.PI;\r\n\r\n        modelRef.current.scene.rotation.y = panStartRotation.current.modelRotation - deltaRotation;\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      hammerRef.current.destroy();\r\n    }\r\n  }, [initialScale])\r\n\r\n  useEffect(() => {\r\n    let deltaTime = 0;\r\n    let isMounted = true;\r\n    let isMarkerVisible = false;\r\n    const { width, height } = { width: 640, height: 480 };\r\n    const clock = new Clock();\r\n    const camera = new Camera();\r\n    const renderer = new WebGLRenderer({\r\n      canvas: canvasRef.current,\r\n      antialias: true,\r\n      alpha: true\r\n    });\r\n    const arToolkitContext = new ArToolkitContext({\r\n      cameraParametersUrl,\r\n      detectionMode: 'mono',\r\n      canvasWidth: width,\r\n      canvasHeight: height\r\n    });\r\n    \r\n    markerRootRef.current = new Group();\r\n    sceneRef.current = new Scene();\r\n    sceneRef.current.add(camera);\r\n    sceneRef.current.add(markerRootRef.current);\r\n    renderer.setClearColor(new Color('lightgrey'), 0)\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n    arToolkitContext.init(() => {\r\n      camera.projectionMatrix.copy(arToolkitContext.getProjectionMatrix());\r\n      new ArMarkerControls(arToolkitContext, markerRootRef.current, {\r\n        type: 'pattern',\r\n        patternUrl\r\n      });\r\n    });\r\n\r\n    const render = () => {\r\n      renderer.render(sceneRef.current, camera);\r\n    };\r\n\r\n    const update = () => {\r\n      if (isMarkerVisible !== markerRootRef.current.visible) {\r\n        isMarkerVisible = markerRootRef.current.visible;\r\n        setIsMarkerFound(markerRootRef.current.visible);\r\n\r\n        if (mixerActionRef.current) {\r\n          mixerActionRef.current.paused = !isMarkerVisible;\r\n        }\r\n      }\r\n\r\n      if (mixerRef.current) {\r\n        mixerRef.current.update(deltaTime);\r\n      }\r\n\r\n      if (videoSourceRef.current) {\r\n        arToolkitContext.update(videoSourceRef.current);\r\n      }\r\n    };\r\n    \r\n    \r\n    const animate = () => {\r\n      if (isMounted) {\r\n        requestAnimationFrame(animate);\r\n        deltaTime = clock.getDelta();\r\n        update();\r\n        render();\r\n      }\r\n    };\r\n\r\n    animate();\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [cameraParametersUrl, patternUrl]);\r\n\r\n  useEffect(() => {\r\n    new GLTFLoader()\r\n    .load(modelUrl, gltf => {\r\n      modelRef.current = gltf;\r\n      const modelScene = gltf.scene;\r\n      const light1 = new AmbientLight(0xffffff, 2);\r\n      const light2 = new PointLight(0xffffff, 1, 0, 2);\r\n      const light3 = new PointLight(0xffffff, 1, 0, 2);\r\n\r\n      markerRootRef.current.add(light1);\r\n      light2.position.set(0, 1, 1);\r\n      markerRootRef.current.add(light2);\r\n      light3.position.set(0, 1, -1);\r\n      markerRootRef.current.add(light3);\r\n\r\n      modelScene.scale.set(initialScale, initialScale, initialScale);\r\n\r\n      markerRootRef.current.add(modelScene);\r\n\r\n      if (gltf.animations[0]) {\r\n        const clip = gltf.animations[0];\r\n\r\n        mixerRef.current = new AnimationMixer(modelScene);\r\n        mixerActionRef.current = mixerRef.current.clipAction(clip);\r\n        mixerActionRef.current.loop = LoopOnce;\r\n        mixerActionRef.current.clampWhenFinished = true;\r\n        mixerActionRef.current.play();\r\n        mixerActionRef.current.paused = !markerRootRef.current.visible;\r\n\r\n        mixerRef.current.addEventListener('finished', e => {\r\n          setIsAnimationFinished(true);\r\n        });\r\n      }\r\n\r\n      setIsModelLoaded(true);\r\n    });\r\n\r\n    return () => {\r\n      setIsModelLoaded(false);\r\n      setIsAnimationFinished(false);\r\n\r\n      markerRootRef.current.children = [];\r\n      mixerRef.current = null;\r\n      mixerActionRef.current = null;\r\n    };\r\n  }, [modelUrl, initialScale])\r\n\r\n  return (\r\n    <div>\r\n        <WebcamSource\r\n          canvasRef={canvasRef}\r\n          videoSourceRef={videoSourceRef}\r\n        />\r\n        <div className='ar-icons-overlay' />\r\n        <audio\r\n          loop\r\n          ref={audioRef}\r\n          preload='auto'\r\n        >\r\n          <source\r\n            src={audioUrl}\r\n            type='audio/mpeg'\r\n          />\r\n        </audio>\r\n        <button\r\n          className='ar-icon ar-icon-sound'\r\n          onClick={() => {\r\n            setIsMute(!isMute);\r\n            audioRef.current.volume = isMute ? 1 : 0;\r\n          }}\r\n        >\r\n          <SoundIcon\r\n            width={32}\r\n            height={32}\r\n            isMute={isMute}\r\n          />\r\n        </button>\r\n        <SoundWave\r\n          width={32}\r\n          height={32}\r\n          isActive={isMarkerFound}\r\n          className='ar-icon ar-icon-wave'\r\n        />\r\n        {!isModelLoaded &&\r\n          <div className='ar-loading'>\r\n            Loading AR model...\r\n          </div>\r\n        }\r\n        {isAnimationFinished && isMarkerFound &&\r\n          <button\r\n            className='ar-loading'\r\n            onClick={() => {\r\n              setIsAnimationFinished(false);\r\n              mixerActionRef.current.reset();\r\n              mixerActionRef.current.play();\r\n            }}\r\n          >\r\n            Replay animation!\r\n          </button>\r\n        }\r\n    </div>\r\n  );\r\n};\r\n\r\nAR.defaultProps = {\r\n  initialScale: 0.0004,\r\n  audioUrl: `${process.env.PUBLIC_URL}/audio/anchor.mp3`,\r\n  modelUrl: `${process.env.PUBLIC_URL}/models/anchor/model.gltf`,\r\n  patternUrl: `${process.env.PUBLIC_URL}/data/hiro.patt`,\r\n  cameraParametersUrl: `${process.env.PUBLIC_URL}/data/camera_para.dat`\r\n};\r\n\r\nexport default AR;\r\n","import React, { useState } from 'react';\n\nimport AR from 'components/AR';\n\nimport './App.css';\n\n\nfunction App() {\n  const [isArEnabled, setArEnabled] = useState(false);\n  return (\n    <div className='App'>\n      <button\n        className='App-button'\n        onClick={() => setArEnabled(prevIsArEnabled => !prevIsArEnabled)}\n      >\n        {isArEnabled ? 'Disable' : 'Enable'} AR\n      </button>\n      {isArEnabled &&\n        <AR />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}